{"remainingRequest":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\src\\views\\Home.vue","mtime":1682413344009},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681747155761},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1681747156896},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681747155761},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1681747158581}],"contextDependencies":[],"result":["\r\nimport * as echarts from 'echarts';\r\nimport _ from 'lodash';\r\nimport {getCompanyData, getEmployeeData, getGoodData, getOrderData, getReturnData} from \"../api\";\r\nexport default {\r\n  name:'Home',\r\n  data() {\r\n    return {\r\n      goodData: [],\r\n      companyData: [],\r\n      employeeData: [],\r\n      orderData: [],\r\n      returnData: [],\r\n      countData: [\r\n        {\r\n          name: \"今日進貨\",\r\n          value: '',\r\n          icon: \"success\",\r\n          color: \"#2ec7c9\",\r\n        },\r\n        {\r\n          name: \"今日出貨\",\r\n          value: '',\r\n          icon: \"truck\",\r\n          color: \"#ffb980\",\r\n        },\r\n        {\r\n          name: \"今日退貨\",\r\n          value: '',\r\n          icon: \"message-solid\",\r\n          color: \"#c55aef\",\r\n        },\r\n        {\r\n          name: \"今日應收款\",\r\n          value: '',\r\n          icon: \"coin\",\r\n          color: \"#5ab1ef\",\r\n        },\r\n        {\r\n          name: \"本月進貨\",\r\n          value: '',\r\n          icon: \"success\",\r\n          color: \"#2ec7c9\",\r\n        },\r\n        {\r\n          name: \"本月出貨\",\r\n          value: '',\r\n          icon: \"truck\",\r\n          color: \"#ffb980\",\r\n        },\r\n        {\r\n          name: \"本月退貨\",\r\n          value: '',\r\n          icon: \"message-solid\",\r\n          color: \"#c55aef\",\r\n        },\r\n        {\r\n          name: \"本月應收款\",\r\n          value: '',\r\n          icon: \"coin\",\r\n          color: \"#5ab1ef\",\r\n        },\r\n      ]\r\n    }\r\n  },\r\n  created() {\r\n    getGoodData().then(\r\n        response => {\r\n          this.goodData = response.data;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getCompanyData().then(\r\n        response => {\r\n          this.companyData = response.data;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getEmployeeData().then(\r\n        response => {\r\n          this.employeeData = response.data;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getOrderData().then(\r\n        response => {\r\n          this.orderData = response.data;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getReturnData().then(\r\n        response => {\r\n          this.returnData = response.data;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n\r\n\r\n  },\r\n  mounted() {\r\n    getGoodData().then(\r\n        response => {\r\n          //將響應的數據綁定到this.goodData\r\n          // this.goodData = response.data;\r\n          //下面開始處理myChart1所需數據\r\n          let goodDataList = response.data;\r\n          //取得當前年份\r\n          let currentYear = new Date().getFullYear();\r\n          //取得去年年份\r\n          let lastYear = currentYear-1;\r\n          // 首先使用lodash將數據按照月份進行分組\r\n          const byMonth = _.groupBy(goodDataList, good => good.pDate.slice(0, 7));\r\n          // 然後對每個月份的訂單進行總收入計算，最後得到的monthlyRevenue對象的鍵表示月份（如'2022-01'），值表示當月的總收入（如300）\r\n          const monthlyRevenue = _.mapValues(byMonth, goodDataList => _.sumBy(goodDataList, 'totalPrice')/1000);\r\n          //動態設定myChart1表\r\n          myChart1.setOption({\r\n            legend: {\r\n              //echart中，legend的值必須要是String才會顯示顏色\r\n              data: [lastYear.toString(),currentYear.toString()]\r\n            },\r\n            series: [\r\n              {\r\n                name: lastYear,\r\n                type: 'line',\r\n                data: [\r\n                  monthlyRevenue[`${lastYear}-01`],\r\n                  monthlyRevenue[`${lastYear}-02`],\r\n                  monthlyRevenue[`${lastYear}-03`],\r\n                  monthlyRevenue[`${lastYear}-04`],\r\n                  monthlyRevenue[`${lastYear}-05`],\r\n                  monthlyRevenue[`${lastYear}-06`],\r\n                  monthlyRevenue[`${lastYear}-07`],\r\n                  monthlyRevenue[`${lastYear}-08`],\r\n                  monthlyRevenue[`${lastYear}-09`],\r\n                  monthlyRevenue[`${lastYear}-010`],\r\n                  monthlyRevenue[`${lastYear}-011`],\r\n                  monthlyRevenue[`${lastYear}-012`]]\r\n              },\r\n              {\r\n                name: currentYear,\r\n                type: 'line',\r\n                data: [\r\n                  monthlyRevenue[`${currentYear}-01`],\r\n                  monthlyRevenue[`${currentYear}-02`],\r\n                  monthlyRevenue[`${currentYear}-03`],\r\n                  monthlyRevenue[`${currentYear}-04`],\r\n                  monthlyRevenue[`${currentYear}-05`],\r\n                  monthlyRevenue[`${currentYear}-06`],\r\n                  monthlyRevenue[`${currentYear}-07`],\r\n                  monthlyRevenue[`${currentYear}-08`],\r\n                  monthlyRevenue[`${currentYear}-09`],\r\n                  monthlyRevenue[`${currentYear}-010`],\r\n                  monthlyRevenue[`${currentYear}-011`],\r\n                  monthlyRevenue[`${currentYear}-012`]]\r\n              }\r\n            ]\r\n          });\r\n\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getCompanyData().then(\r\n        response => {\r\n          //處理myChart1所需的數據\r\n          //在返回的company數據中添加當年營收及去年營收欄位\r\n          let companyDataList = response.data.map(c => ({ ...c, total_sales_this_year: 0,total_sales_last_year: 0 }));\r\n          //取得當前年份\r\n          let currentYear = new Date().getFullYear();\r\n          //取得去年年份\r\n          let lastYear = currentYear-1;\r\n          //由this.goodDate中取得當前年份的營收\r\n          for (let i = 0; i < this.goodData.length; i++) {\r\n            let item = this.goodData[i];\r\n            if(item.pDate.includes(currentYear)){\r\n              let company = companyDataList.find(c => c.companyId === item.company.companyId );\r\n              if (company) {\r\n                company.total_sales_this_year += item.totalPrice;\r\n              }\r\n              //由this.goodDate中取得去年年份的營收\r\n            }else if(item.pDate.includes(lastYear)){\r\n              let companyLastYear = companyDataList.find(c => c.companyId === item.company.companyId );\r\n              if (companyLastYear) {\r\n                companyLastYear.total_sales_last_year += item.totalPrice;\r\n              }\r\n            }\r\n          }\r\n          //將取的資料保存到this.companyData\r\n          this.companyData = companyDataList;\r\n          //動態設定myChart2資料\r\n          myChart2.setOption({\r\n            xAxis: {\r\n              data: this.companyData.map(company => company.companyName)\r\n            },\r\n            legend: {\r\n              data: [lastYear.toString(),currentYear.toString()]\r\n            },\r\n            series: [\r\n              {\r\n                name: lastYear,\r\n                data: this.companyData.map(company => company.total_sales_last_year / 1000)\r\n              },\r\n              {\r\n                name: currentYear,\r\n                data: this.companyData.map(company => company.total_sales_this_year / 1000)\r\n              }\r\n            ]\r\n          });\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getOrderData().then(\r\n        response => {\r\n          //以下處理myChart3所需數據\r\n          let orderDataList = response.data;\r\n          let employeeDataList = this.employeeData.map(c => ({ ...c, total_sales_this_month: 0}));\r\n          //取得當前時間\r\n          let now = new Date();\r\n          //取得當前年份\r\n          let year = now.getFullYear();\r\n          //取得當前月份\r\n          let month = now.getMonth() + 1;\r\n          //月份補零操作\r\n          month = month < 10 ? \"0\" + month : month;\r\n          //由order篩選出當月每個員工的收入\r\n          for (let i = 0; i < orderDataList.length; i++) {\r\n            let item = orderDataList[i];\r\n            if(item.oDate.includes(`${year}-${month}`)){\r\n              let employee = employeeDataList.find(e => e.eid === item.employee.eid );\r\n              if (employee) {\r\n                employeeDataList[item.employee.eid].total_sales_this_month += item.ototalPrice;\r\n              }\r\n            }\r\n          }\r\n          //將當月每個員工的收入依myChart3所需格式保存到map中\r\n          let mappedDataList = employeeDataList.map((item, index, arr) => {\r\n            return {\r\n              value: item.ename,\r\n              name: item.total_sales_this_month\r\n            };\r\n          });\r\n          myChart3.setOption({\r\n            //動態取得數據並設定到圖表\r\n            series: [\r\n              {\r\n                data: employeeDataList.filter(emp => emp.total_sales_this_month !== 0).map(emp => {\r\n                  return {\r\n                    name: emp.ename,\r\n                    value: [emp.total_sales_this_month]\r\n                  };\r\n                })\r\n              }\r\n            ],\r\n           //動態綁定提式框\r\n            tooltip: {\r\n              trigger: 'item',\r\n              formatter: '{b}: {c} ({d}%)'\r\n            },\r\n          });\r\n\r\n          //以下處理countDate數據\r\n          //使用moment.js取得當前時間，格式為\"YYYY-MM-DD\"\r\n          let moment = require('moment');\r\n          let currentDate = moment().format('YYYY-MM-DD');\r\n          let currentMonth = moment().format('YYYY-MM');\r\n          //將this.goodData中符合當日時間的進貨商品保存到PurchaseLis中\r\n          let monthlyPurchaseList = this.goodData.filter(g => g.pDate && g.pDate !== 0).filter(g => g.pDate.slice(0, 7) === currentMonth);\r\n          let dailyPurchaseList  = monthlyPurchaseList.filter(g => g.pDate === currentDate);\r\n          //將this.goodData中符合當日時間的出貨商品保存到ShipList中\r\n          let monthlyShipList = this.goodData.filter(g => g.sDate && g.sDate !== 0).filter(g => g.sDate.slice(0, 7) === currentMonth);\r\n          let dailyShipList = monthlyShipList.filter(g => g.sDate === currentDate);\r\n          //將this.returnData中符合當日時間的退貨商品保存到ReturnList中\r\n          let monthlyReturnList = this.returnData.filter(r => r.returnDate && r.returnDate !== 0).filter(r => r.returnDate.slice(0, 7) === currentMonth);\r\n          let dailyReturnList = monthlyReturnList.filter(r => r.returnDate === currentDate);\r\n          //定義當月應收款\r\n          let monthlyRevenue = 0;\r\n          //定義當日應收款\r\n          let dailyRevenue = 0;\r\n          //求得當月應收款\r\n          for(let i = 0; i < monthlyShipList.length; i++){\r\n            monthlyRevenue += monthlyShipList[i].totalPrice;\r\n          }\r\n          //求得當日應收款\r\n          for(let i = 0; i < dailyShipList.length; i++){\r\n            dailyRevenue += dailyShipList[i].totalPrice;\r\n          }\r\n          //動態綁定countDate數據\r\n          this.countData[0].value = dailyPurchaseList.length;\r\n          this.countData[1].value = dailyShipList.length;\r\n          this.countData[2].value = dailyReturnList.length;\r\n          this.countData[3].value = dailyRevenue;\r\n          this.countData[4].value = monthlyPurchaseList.length;\r\n          this.countData[5].value = monthlyShipList.length;\r\n          this.countData[6].value = monthlyReturnList.length;\r\n          this.countData[7].value = monthlyRevenue;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n\r\n    // 基於準備好的dom，初始化echarts實例\r\n    var myChart1 = echarts.init(this.$refs.echarts1);\r\n    // 繪製圖表1\r\n    myChart1.setOption({\r\n      title: {\r\n        text: '每月營收'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: []\r\n      },\r\n      xAxis: {\r\n        data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '營收/(仟)'\r\n      },\r\n      series: [\r\n        {\r\n          name: '',\r\n          type: 'line',\r\n          data: []\r\n        },\r\n        {\r\n          name: '',\r\n          type: 'line',\r\n          data: []\r\n        }\r\n      ]\r\n    });\r\n    // 基於準備好的dom，初始化echarts實例\r\n    var myChart2 = echarts.init(this.$refs.echarts2);\r\n    // 繪製圖表2\r\n    myChart2.setOption({\r\n      title: {\r\n        text: '廠商收入'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['','']\r\n      },\r\n      xAxis: {\r\n        data: []\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '營收/(仟)'\r\n      },\r\n      series: [\r\n        {\r\n          name: '2019',\r\n          type: 'bar',\r\n          barGap: '20%',\r\n          barCategoryGap: '40%',\r\n          data: []\r\n        },\r\n        {\r\n          name: '2020',\r\n          type: 'bar',\r\n          data: []\r\n        }\r\n      ]\r\n    });\r\n    // 基於準備好的dom，初始化echarts實例\r\n    var myChart3 = echarts.init(this.$refs.echarts3);\r\n    // 繪製圖表3\r\n    myChart3.setOption({\r\n      title: {\r\n        text: '員工收入'\r\n      },\r\n      series: [\r\n        {\r\n          type: 'pie',\r\n          data: [],\r\n          label: {\r\n            show: true,\r\n            formatter: '{b}: {c} 元  ({d}%)'\r\n          },\r\n        }\r\n      ]\r\n\r\n    });\r\n\r\n  },\r\n}\r\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";AAifile":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <el-row>\r\n    <el-col :span=\"8\" style=\"padding-right: 10px\">\r\n      <el-card class=\"box-card\">\r\n        <div class=\"user\">\r\n          <img src=\"../assets/images/male.png\" alt=\"\">\r\n          <div class=\"userinfo\">\r\n            <p class=\"name\">Admin</p>\r\n            <p class=\"access\">超级管理员</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"login-info\">\r\n          <p>上次登录时间：<span>2021-7-19</span></p>\r\n        </div>\r\n      </el-card>\r\n      <el-card style=\"margin-top: 20px;height: 620px;\">\r\n<!--        <div slot=\"header\" class=\"clearfix\">-->\r\n<!--          <span>待完成線材清單</span>-->\r\n<!--        </div>-->\r\n<!--        <p class=\"tablename\">《 待完成線材清單 》</p>-->\r\n        <el-table\r\n            :data=\"goodData\"\r\n            height=\"580\"\r\n            stripe\r\n            size=\"small\"\r\n            style=\"width: 100%\">\r\n          <el-table-column\r\n              prop=\"pdate\"\r\n              label=\"進貨日期\"\r\n              width=\"90\">\r\n          </el-table-column>\r\n          <el-table-column\r\n              prop=\"company.companyName\"\r\n              label=\"廠商\"\r\n              width=\"60\">\r\n          </el-table-column>\r\n          <el-table-column\r\n              prop=\"lineName\"\r\n              label=\"品名\">\r\n          </el-table-column>\r\n          <el-table-column\r\n              prop=\"lineType\"\r\n              label=\"端子\"\r\n              width=\"160\">\r\n          </el-table-column>\r\n          <el-table-column\r\n              prop=\"totalCount\"\r\n              label=\"數量\"\r\n              width=\"60\">\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-card>\r\n     </el-col>\r\n    <el-col :span=\"16\" style=\"padding-left: 10px\">\r\n      <div class=\"num\">\r\n        <el-card v-for=\"item in countData\" :key=\"item.name\" :body-style=\"{ display: 'flex', padding: 0 }\">\r\n          <i class=\"icon\" :class=\"`el-icon-${item.icon}`\" :style=\"{ background: item.color }\"></i>\r\n          <div class=\"detail\">\r\n            <p class=\"price\" v-if=\"item.icon === 'coin'\">{{ item.value }}  元</p>\r\n            <p class=\"price\" v-if=\"item.icon !== 'coin'\">{{ item.value }}  件</p>\r\n            <p class=\"desc\">{{ item.name }}</p>\r\n          </div>\r\n        </el-card>\r\n      </div>\r\n      <el-card style=\"height: 350px\">\r\n        <!-- 折线图 -->\r\n        <div ref=\"echarts1\" class=\"echarts3\" style=\"height: 350px\"></div>\r\n      </el-card>\r\n      <div class=\"graph\">\r\n        <el-card style=\"height: 340px\">\r\n          <div ref=\"echarts2\" class=\"echarts3\" style=\"height: 340px\"></div>\r\n        </el-card>\r\n        <el-card style=\"height: 340px\">\r\n          <div ref=\"echarts3\" class=\"echarts3\" style=\"height: 340px\"></div>\r\n        </el-card>\r\n      </div>\r\n    </el-col>\r\n  </el-row>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport _ from 'lodash';\r\nimport {getCompanyData, getEmployeeData, getGoodData, getOrderData, getReturnData} from \"../api\";\r\nexport default {\r\n  name:'Home',\r\n  data() {\r\n    return {\r\n      goodData: [],\r\n      companyData: [],\r\n      employeeData: [],\r\n      orderData: [],\r\n      returnData: [],\r\n      countData: [\r\n        {\r\n          name: \"今日進貨\",\r\n          value: '',\r\n          icon: \"success\",\r\n          color: \"#2ec7c9\",\r\n        },\r\n        {\r\n          name: \"今日出貨\",\r\n          value: '',\r\n          icon: \"truck\",\r\n          color: \"#ffb980\",\r\n        },\r\n        {\r\n          name: \"今日退貨\",\r\n          value: '',\r\n          icon: \"message-solid\",\r\n          color: \"#c55aef\",\r\n        },\r\n        {\r\n          name: \"今日應收款\",\r\n          value: '',\r\n          icon: \"coin\",\r\n          color: \"#5ab1ef\",\r\n        },\r\n        {\r\n          name: \"本月進貨\",\r\n          value: '',\r\n          icon: \"success\",\r\n          color: \"#2ec7c9\",\r\n        },\r\n        {\r\n          name: \"本月出貨\",\r\n          value: '',\r\n          icon: \"truck\",\r\n          color: \"#ffb980\",\r\n        },\r\n        {\r\n          name: \"本月退貨\",\r\n          value: '',\r\n          icon: \"message-solid\",\r\n          color: \"#c55aef\",\r\n        },\r\n        {\r\n          name: \"本月應收款\",\r\n          value: '',\r\n          icon: \"coin\",\r\n          color: \"#5ab1ef\",\r\n        },\r\n      ]\r\n    }\r\n  },\r\n  created() {\r\n    getGoodData().then(\r\n        response => {\r\n          this.goodData = response.data;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getCompanyData().then(\r\n        response => {\r\n          this.companyData = response.data;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getEmployeeData().then(\r\n        response => {\r\n          this.employeeData = response.data;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getOrderData().then(\r\n        response => {\r\n          this.orderData = response.data;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getReturnData().then(\r\n        response => {\r\n          this.returnData = response.data;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n\r\n\r\n  },\r\n  mounted() {\r\n    getGoodData().then(\r\n        response => {\r\n          //將響應的數據綁定到this.goodData\r\n          // this.goodData = response.data;\r\n          //下面開始處理myChart1所需數據\r\n          let goodDataList = response.data;\r\n          //取得當前年份\r\n          let currentYear = new Date().getFullYear();\r\n          //取得去年年份\r\n          let lastYear = currentYear-1;\r\n          // 首先使用lodash將數據按照月份進行分組\r\n          const byMonth = _.groupBy(goodDataList, good => good.pDate.slice(0, 7));\r\n          // 然後對每個月份的訂單進行總收入計算，最後得到的monthlyRevenue對象的鍵表示月份（如'2022-01'），值表示當月的總收入（如300）\r\n          const monthlyRevenue = _.mapValues(byMonth, goodDataList => _.sumBy(goodDataList, 'totalPrice')/1000);\r\n          //動態設定myChart1表\r\n          myChart1.setOption({\r\n            legend: {\r\n              //echart中，legend的值必須要是String才會顯示顏色\r\n              data: [lastYear.toString(),currentYear.toString()]\r\n            },\r\n            series: [\r\n              {\r\n                name: lastYear,\r\n                type: 'line',\r\n                data: [\r\n                  monthlyRevenue[`${lastYear}-01`],\r\n                  monthlyRevenue[`${lastYear}-02`],\r\n                  monthlyRevenue[`${lastYear}-03`],\r\n                  monthlyRevenue[`${lastYear}-04`],\r\n                  monthlyRevenue[`${lastYear}-05`],\r\n                  monthlyRevenue[`${lastYear}-06`],\r\n                  monthlyRevenue[`${lastYear}-07`],\r\n                  monthlyRevenue[`${lastYear}-08`],\r\n                  monthlyRevenue[`${lastYear}-09`],\r\n                  monthlyRevenue[`${lastYear}-010`],\r\n                  monthlyRevenue[`${lastYear}-011`],\r\n                  monthlyRevenue[`${lastYear}-012`]]\r\n              },\r\n              {\r\n                name: currentYear,\r\n                type: 'line',\r\n                data: [\r\n                  monthlyRevenue[`${currentYear}-01`],\r\n                  monthlyRevenue[`${currentYear}-02`],\r\n                  monthlyRevenue[`${currentYear}-03`],\r\n                  monthlyRevenue[`${currentYear}-04`],\r\n                  monthlyRevenue[`${currentYear}-05`],\r\n                  monthlyRevenue[`${currentYear}-06`],\r\n                  monthlyRevenue[`${currentYear}-07`],\r\n                  monthlyRevenue[`${currentYear}-08`],\r\n                  monthlyRevenue[`${currentYear}-09`],\r\n                  monthlyRevenue[`${currentYear}-010`],\r\n                  monthlyRevenue[`${currentYear}-011`],\r\n                  monthlyRevenue[`${currentYear}-012`]]\r\n              }\r\n            ]\r\n          });\r\n\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getCompanyData().then(\r\n        response => {\r\n          //處理myChart1所需的數據\r\n          //在返回的company數據中添加當年營收及去年營收欄位\r\n          let companyDataList = response.data.map(c => ({ ...c, total_sales_this_year: 0,total_sales_last_year: 0 }));\r\n          //取得當前年份\r\n          let currentYear = new Date().getFullYear();\r\n          //取得去年年份\r\n          let lastYear = currentYear-1;\r\n          //由this.goodDate中取得當前年份的營收\r\n          for (let i = 0; i < this.goodData.length; i++) {\r\n            let item = this.goodData[i];\r\n            if(item.pDate.includes(currentYear)){\r\n              let company = companyDataList.find(c => c.companyId === item.company.companyId );\r\n              if (company) {\r\n                company.total_sales_this_year += item.totalPrice;\r\n              }\r\n              //由this.goodDate中取得去年年份的營收\r\n            }else if(item.pDate.includes(lastYear)){\r\n              let companyLastYear = companyDataList.find(c => c.companyId === item.company.companyId );\r\n              if (companyLastYear) {\r\n                companyLastYear.total_sales_last_year += item.totalPrice;\r\n              }\r\n            }\r\n          }\r\n          //將取的資料保存到this.companyData\r\n          this.companyData = companyDataList;\r\n          //動態設定myChart2資料\r\n          myChart2.setOption({\r\n            xAxis: {\r\n              data: this.companyData.map(company => company.companyName)\r\n            },\r\n            legend: {\r\n              data: [lastYear.toString(),currentYear.toString()]\r\n            },\r\n            series: [\r\n              {\r\n                name: lastYear,\r\n                data: this.companyData.map(company => company.total_sales_last_year / 1000)\r\n              },\r\n              {\r\n                name: currentYear,\r\n                data: this.companyData.map(company => company.total_sales_this_year / 1000)\r\n              }\r\n            ]\r\n          });\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getOrderData().then(\r\n        response => {\r\n          //以下處理myChart3所需數據\r\n          let orderDataList = response.data;\r\n          let employeeDataList = this.employeeData.map(c => ({ ...c, total_sales_this_month: 0}));\r\n          //取得當前時間\r\n          let now = new Date();\r\n          //取得當前年份\r\n          let year = now.getFullYear();\r\n          //取得當前月份\r\n          let month = now.getMonth() + 1;\r\n          //月份補零操作\r\n          month = month < 10 ? \"0\" + month : month;\r\n          //由order篩選出當月每個員工的收入\r\n          for (let i = 0; i < orderDataList.length; i++) {\r\n            let item = orderDataList[i];\r\n            if(item.oDate.includes(`${year}-${month}`)){\r\n              let employee = employeeDataList.find(e => e.eid === item.employee.eid );\r\n              if (employee) {\r\n                employeeDataList[item.employee.eid].total_sales_this_month += item.ototalPrice;\r\n              }\r\n            }\r\n          }\r\n          //將當月每個員工的收入依myChart3所需格式保存到map中\r\n          let mappedDataList = employeeDataList.map((item, index, arr) => {\r\n            return {\r\n              value: item.ename,\r\n              name: item.total_sales_this_month\r\n            };\r\n          });\r\n          myChart3.setOption({\r\n            //動態取得數據並設定到圖表\r\n            series: [\r\n              {\r\n                data: employeeDataList.filter(emp => emp.total_sales_this_month !== 0).map(emp => {\r\n                  return {\r\n                    name: emp.ename,\r\n                    value: [emp.total_sales_this_month]\r\n                  };\r\n                })\r\n              }\r\n            ],\r\n           //動態綁定提式框\r\n            tooltip: {\r\n              trigger: 'item',\r\n              formatter: '{b}: {c} ({d}%)'\r\n            },\r\n          });\r\n\r\n          //以下處理countDate數據\r\n          //使用moment.js取得當前時間，格式為\"YYYY-MM-DD\"\r\n          let moment = require('moment');\r\n          let currentDate = moment().format('YYYY-MM-DD');\r\n          let currentMonth = moment().format('YYYY-MM');\r\n          //將this.goodData中符合當日時間的進貨商品保存到PurchaseLis中\r\n          let monthlyPurchaseList = this.goodData.filter(g => g.pDate && g.pDate !== 0).filter(g => g.pDate.slice(0, 7) === currentMonth);\r\n          let dailyPurchaseList  = monthlyPurchaseList.filter(g => g.pDate === currentDate);\r\n          //將this.goodData中符合當日時間的出貨商品保存到ShipList中\r\n          let monthlyShipList = this.goodData.filter(g => g.sDate && g.sDate !== 0).filter(g => g.sDate.slice(0, 7) === currentMonth);\r\n          let dailyShipList = monthlyShipList.filter(g => g.sDate === currentDate);\r\n          //將this.returnData中符合當日時間的退貨商品保存到ReturnList中\r\n          let monthlyReturnList = this.returnData.filter(r => r.returnDate && r.returnDate !== 0).filter(r => r.returnDate.slice(0, 7) === currentMonth);\r\n          let dailyReturnList = monthlyReturnList.filter(r => r.returnDate === currentDate);\r\n          //定義當月應收款\r\n          let monthlyRevenue = 0;\r\n          //定義當日應收款\r\n          let dailyRevenue = 0;\r\n          //求得當月應收款\r\n          for(let i = 0; i < monthlyShipList.length; i++){\r\n            monthlyRevenue += monthlyShipList[i].totalPrice;\r\n          }\r\n          //求得當日應收款\r\n          for(let i = 0; i < dailyShipList.length; i++){\r\n            dailyRevenue += dailyShipList[i].totalPrice;\r\n          }\r\n          //動態綁定countDate數據\r\n          this.countData[0].value = dailyPurchaseList.length;\r\n          this.countData[1].value = dailyShipList.length;\r\n          this.countData[2].value = dailyReturnList.length;\r\n          this.countData[3].value = dailyRevenue;\r\n          this.countData[4].value = monthlyPurchaseList.length;\r\n          this.countData[5].value = monthlyShipList.length;\r\n          this.countData[6].value = monthlyReturnList.length;\r\n          this.countData[7].value = monthlyRevenue;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n\r\n    // 基於準備好的dom，初始化echarts實例\r\n    var myChart1 = echarts.init(this.$refs.echarts1);\r\n    // 繪製圖表1\r\n    myChart1.setOption({\r\n      title: {\r\n        text: '每月營收'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: []\r\n      },\r\n      xAxis: {\r\n        data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '營收/(仟)'\r\n      },\r\n      series: [\r\n        {\r\n          name: '',\r\n          type: 'line',\r\n          data: []\r\n        },\r\n        {\r\n          name: '',\r\n          type: 'line',\r\n          data: []\r\n        }\r\n      ]\r\n    });\r\n    // 基於準備好的dom，初始化echarts實例\r\n    var myChart2 = echarts.init(this.$refs.echarts2);\r\n    // 繪製圖表2\r\n    myChart2.setOption({\r\n      title: {\r\n        text: '廠商收入'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['','']\r\n      },\r\n      xAxis: {\r\n        data: []\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '營收/(仟)'\r\n      },\r\n      series: [\r\n        {\r\n          name: '2019',\r\n          type: 'bar',\r\n          barGap: '20%',\r\n          barCategoryGap: '40%',\r\n          data: []\r\n        },\r\n        {\r\n          name: '2020',\r\n          type: 'bar',\r\n          data: []\r\n        }\r\n      ]\r\n    });\r\n    // 基於準備好的dom，初始化echarts實例\r\n    var myChart3 = echarts.init(this.$refs.echarts3);\r\n    // 繪製圖表3\r\n    myChart3.setOption({\r\n      title: {\r\n        text: '員工收入'\r\n      },\r\n      series: [\r\n        {\r\n          type: 'pie',\r\n          data: [],\r\n          label: {\r\n            show: true,\r\n            formatter: '{b}: {c} 元  ({d}%)'\r\n          },\r\n        }\r\n      ]\r\n\r\n    });\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user {\r\n  padding-bottom: 20px;\r\n  margin-bottom: 20px;\r\n  border-bottom: 1px solid #ccc;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.user img {\r\n  margin-right: 40px;\r\n  width: 150px;\r\n  height: 150px;\r\n  border-radius: 50%;\r\n}\r\n.user .userinfo .name {\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n}\r\n.user .userinfo .access {\r\n  color: #999999;\r\n}\r\n.tablename {\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n  margin-top: 0px;\r\n  text-align: left;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  /*color: #999999;*/\r\n}\r\n.login-info p {\r\n  line-height: 28px;\r\n  font-size: 14px;\r\n  color: #999999;\r\n}\r\n.login-info p span {\r\n  color: #666666;\r\n  margin-left: 60px;\r\n}\r\n.num {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n}\r\n.num .icon {\r\n  width: 80px;\r\n  height: 80px;\r\n  font-size: 30px;\r\n  text-align: center;\r\n  line-height: 80px;\r\n  color: #fff;\r\n}\r\n.num .detail {\r\n  margin-left: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  height: 80px;\r\n}\r\n.num .detail .price {\r\n  font-size: 30px;\r\n  margin-bottom: 10px;\r\n  margin-top: 20px;\r\n  line-height: 30px;\r\n  height: 30px;\r\n}\r\n.num .detail .desc {\r\n  font-size: 14px;\r\n  color: #999;\r\n  text-align: center;\r\n  margin-top: 0;\r\n}\r\n.num .el-card {\r\n  width: 24%;\r\n  margin-bottom: 20px;\r\n}\r\n.graph {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.graph .el-card {\r\n  width: 48%;\r\n}\r\n.echarts2 , .echarts3 {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center\r\n}\r\n</style>"]}]}