{"remainingRequest":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\src\\views\\User.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\src\\views\\User.vue","mtime":1682588160506},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681747155761},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1681747156896},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681747155761},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1681747158581}],"contextDependencies":[],"result":["\r\nimport { getUser, addUser, editUser, delUser } from '../api'\r\nexport default {\r\n    data() {\r\n        return {\r\n            dialogVisible: false,\r\n            form: {\r\n                name: '',\r\n                age: '',\r\n                sex: '',\r\n                birth: '',\r\n                addr: ''\r\n            },\r\n            rules: {\r\n                name: [\r\n                    { required: true, message: '请输入姓名' }\r\n                ],\r\n                age: [\r\n                    { required: true, message: '请输入年龄' }\r\n                ],\r\n                sex: [\r\n                    { required: true, message: '请选择性别' }\r\n                ],\r\n                birth: [\r\n                    { required: true, message: '请选择出生日期' }\r\n                ],\r\n                addr: [\r\n                    { required: true, message: '请输入地址' }\r\n                ]\r\n            },\r\n            tableData: [],\r\n            modalType: 0, // 0表示新增的弹窗， 1表示编辑\r\n            total: 0, //当前的总条数\r\n            pageData: {\r\n                page: 1,\r\n                limit: 10\r\n            },\r\n            userForm: {\r\n                name: ''\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        // 提交用户表单\r\n        submit() {\r\n            this.$refs.form.validate((valid) => {\r\n                // console.log(valid, 'valid')\r\n                if (valid) {\r\n                    // 后续对表单数据的处理\r\n                    if (this.modalType === 0) {\r\n                        addUser(this.form).then(() => {\r\n                            // 重新获取列表的接口\r\n                            this.getList()\r\n                        })\r\n                    } else {\r\n                        editUser(this.form).then(() => {\r\n                            // 重新获取列表的接口\r\n                            this.getList()\r\n                        })\r\n                    }\r\n\r\n                    // 清空表单的数据\r\n                    this.$refs.form.resetFields()\r\n                    // 关闭弹窗\r\n                    this.dialogVisible = false\r\n                }\r\n            })\r\n        },\r\n        // 弹窗关闭的时候\r\n        handleClose() {\r\n            this.$refs.form.resetFields()\r\n            this.dialogVisible = false\r\n        },\r\n        cancel() {\r\n            this.handleClose()\r\n        },\r\n        handleEdit(row) {\r\n            this.modalType = 1\r\n            this.dialogVisible = true\r\n            // 注意需要对当前行数据进行深拷贝，否则会出错\r\n            this.form = JSON.parse(JSON.stringify(row))\r\n        },\r\n        handleDelete(row) {\r\n            this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n                }).then(() => {\r\n                    delUser({ id: row.id }).then(() => {\r\n                        this.$message({\r\n                            type: 'success',\r\n                            message: '删除成功!'\r\n                        });\r\n                        // 重新获取列表的接口\r\n                        this.getList()\r\n                    })\r\n                    \r\n                }).catch(() => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '已取消删除'\r\n                    });          \r\n            });\r\n        },\r\n        handleAdd() {\r\n            this.modalType = 0\r\n            this.dialogVisible = true\r\n        },\r\n        // 获取列表的数据\r\n        getList() {\r\n            // 获取的列表的数据\r\n            getUser({params: {...this.userForm, ...this.pageData}}).then(({ data }) => {\r\n                console.log(data)\r\n                this.tableData = data.list\r\n\r\n                this.total = data.count || 0\r\n            })\r\n        },\r\n        // 选择页码的回调函数\r\n        handlePage(val) {\r\n            // console.log(val, 'val')\r\n            this.pageData.page = val\r\n            this.getList()\r\n        },\r\n        // 列表的查询\r\n        onSubmit() {\r\n            this.getList()\r\n        }\r\n    },\r\n    mounted () {\r\n        this.getList()\r\n    }\r\n}\r\n",{"version":3,"sources":["User.vue"],"names":[],"mappings":";AAufile":"User.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"manage\">\r\n        <el-dialog\r\n            title=\"提示\"\r\n            :visible.sync=\"dialogVisible\"\r\n            width=\"50%\"\r\n            :before-close=\"handleClose\">\r\n            <!-- 用户的表单信息 -->\r\n            <el-form ref=\"form\" :rules=\"rules\" :inline=\"true\" :model=\"form\" label-width=\"80px\">\r\n                <el-form-item label=\"姓名\" prop=\"name\">\r\n                    <el-input placeholder=\"请输入姓名\" v-model=\"form.name\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"年龄\" prop=\"age\">\r\n                    <el-input placeholder=\"请输入年龄\" v-model=\"form.age\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"性别\" prop=\"sex\">\r\n                    <el-select v-model=\"form.sex\" placeholder=\"请选择\">\r\n                        <el-option label=\"男\" :value=\"1\"></el-option>\r\n                        <el-option label=\"女\" :value=\"0\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"出生日期\" prop=\"birth\">\r\n                    <el-date-picker\r\n                        v-model=\"form.birth\"\r\n                        type=\"date\"\r\n                        placeholder=\"选择日期\"\r\n                        value-format=\"yyyy-MM-DD\">\r\n                    </el-date-picker>\r\n                </el-form-item>\r\n                <el-form-item label=\"地址\" prop=\"addr\">\r\n                    <el-input placeholder=\"请输入地址\" v-model=\"form.addr\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"cancel\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"submit\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n        <div class=\"manage-header\">\r\n            <el-button @click=\"handleAdd\" type=\"primary\">\r\n                + 新增\r\n            </el-button>\r\n            <!-- form搜索区域 -->\r\n            <el-form :inline=\"true\" :model=\"userForm\">\r\n                <el-form-item>\r\n                    <el-input placeholder=\"请输入名称\" v-model=\"userForm.name\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"onSubmit\">查询</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n        <div class=\"common-tabel\">\r\n            <el-table\r\n                stripe\r\n                height=\"90%\"\r\n                :data=\"tableData\"\r\n                style=\"width: 100%\">\r\n                <el-table-column\r\n                    prop=\"name\"\r\n                    label=\"姓名\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"sex\"\r\n                    label=\"性别\">\r\n                    <template slot-scope=\"scope\">\r\n                        <span>{{ scope.row.sex == 1 ? '男' : '女' }}</span>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"age\"\r\n                    label=\"年龄\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"birth\"\r\n                    label=\"出生日期\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"addr\"\r\n                    label=\"地址\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"addr\"\r\n                    label=\"地址\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n                        <el-button type=\"danger\" size=\"mini\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n\r\n            </el-table>\r\n            <div class=\"pager\">\r\n                <el-pagination\r\n                    layout=\"prev, pager, next\"\r\n                    :total=\"total\"\r\n                    @current-change=\"handlePage\">\r\n                </el-pagination>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { getUser, addUser, editUser, delUser } from '../api'\r\nexport default {\r\n    data() {\r\n        return {\r\n            dialogVisible: false,\r\n            form: {\r\n                name: '',\r\n                age: '',\r\n                sex: '',\r\n                birth: '',\r\n                addr: ''\r\n            },\r\n            rules: {\r\n                name: [\r\n                    { required: true, message: '请输入姓名' }\r\n                ],\r\n                age: [\r\n                    { required: true, message: '请输入年龄' }\r\n                ],\r\n                sex: [\r\n                    { required: true, message: '请选择性别' }\r\n                ],\r\n                birth: [\r\n                    { required: true, message: '请选择出生日期' }\r\n                ],\r\n                addr: [\r\n                    { required: true, message: '请输入地址' }\r\n                ]\r\n            },\r\n            tableData: [],\r\n            modalType: 0, // 0表示新增的弹窗， 1表示编辑\r\n            total: 0, //当前的总条数\r\n            pageData: {\r\n                page: 1,\r\n                limit: 10\r\n            },\r\n            userForm: {\r\n                name: ''\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        // 提交用户表单\r\n        submit() {\r\n            this.$refs.form.validate((valid) => {\r\n                // console.log(valid, 'valid')\r\n                if (valid) {\r\n                    // 后续对表单数据的处理\r\n                    if (this.modalType === 0) {\r\n                        addUser(this.form).then(() => {\r\n                            // 重新获取列表的接口\r\n                            this.getList()\r\n                        })\r\n                    } else {\r\n                        editUser(this.form).then(() => {\r\n                            // 重新获取列表的接口\r\n                            this.getList()\r\n                        })\r\n                    }\r\n\r\n                    // 清空表单的数据\r\n                    this.$refs.form.resetFields()\r\n                    // 关闭弹窗\r\n                    this.dialogVisible = false\r\n                }\r\n            })\r\n        },\r\n        // 弹窗关闭的时候\r\n        handleClose() {\r\n            this.$refs.form.resetFields()\r\n            this.dialogVisible = false\r\n        },\r\n        cancel() {\r\n            this.handleClose()\r\n        },\r\n        handleEdit(row) {\r\n            this.modalType = 1\r\n            this.dialogVisible = true\r\n            // 注意需要对当前行数据进行深拷贝，否则会出错\r\n            this.form = JSON.parse(JSON.stringify(row))\r\n        },\r\n        handleDelete(row) {\r\n            this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n                }).then(() => {\r\n                    delUser({ id: row.id }).then(() => {\r\n                        this.$message({\r\n                            type: 'success',\r\n                            message: '删除成功!'\r\n                        });\r\n                        // 重新获取列表的接口\r\n                        this.getList()\r\n                    })\r\n                    \r\n                }).catch(() => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '已取消删除'\r\n                    });          \r\n            });\r\n        },\r\n        handleAdd() {\r\n            this.modalType = 0\r\n            this.dialogVisible = true\r\n        },\r\n        // 获取列表的数据\r\n        getList() {\r\n            // 获取的列表的数据\r\n            getUser({params: {...this.userForm, ...this.pageData}}).then(({ data }) => {\r\n                console.log(data)\r\n                this.tableData = data.list\r\n\r\n                this.total = data.count || 0\r\n            })\r\n        },\r\n        // 选择页码的回调函数\r\n        handlePage(val) {\r\n            // console.log(val, 'val')\r\n            this.pageData.page = val\r\n            this.getList()\r\n        },\r\n        // 列表的查询\r\n        onSubmit() {\r\n            this.getList()\r\n        }\r\n    },\r\n    mounted () {\r\n        this.getList()\r\n    }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.manage {\r\n    height: 90%;\r\n    .manage-header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n    .common-tabel {\r\n        position: relative;\r\n        height: calc(100% - 62px);\r\n        .pager {\r\n            position: absolute;\r\n            bottom: 0;\r\n            right: 20px;\r\n        }\r\n    }\r\n}\r\n</style>"]}]}