{"remainingRequest":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\babel-loader\\lib\\index.js!D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\src\\views\\PayrollManagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\src\\views\\PayrollManagement.vue","mtime":1683691129682},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\babel.config.js","mtime":1681747183855},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681747155761},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1681747156896},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681747155761},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1681747158581}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:/develop_tools/work/maven-work/Yansol/msystem-web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { mapActions, mapGetters, mapMutations, mapState } from 'vuex';\nexport default {\n  name: 'PayrollManagement',\n  data: function data() {\n    return {\n      // currentPage: 1,\n      // pageSize: 10,\n      //彈窗開/關\n      // dialogFormVisible: false,\n      //employee表彈窗初始資料\n      // form: {\n      //   eName: '',\n      //   salary: '',\n      //   paid: '',\n      // },\n\n      // modelType:0, //0：新增窗口，1：修改窗口\n      //查詢功能信息\n      // queryForm:{\n      //   queryKeyword:'',\n      // },\n      // thisMonthSallary:[],\n      // lastMonthSallary:[],\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState('data', ['employeeData', 'orderData'])), mapGetters('data', ['salaryList', 'currentMonth', 'lastMonth'])),\n  methods: _objectSpread({}, mapActions('data', ['fetchEmployeeData', 'fetchOrderData'])),\n  created: function created() {\n    this.fetchEmployeeData();\n    this.fetchOrderData();\n  },\n  mounted: function mounted() {\n    console.log(this.companyData);\n  }\n};",{"version":3,"names":["mapActions","mapGetters","mapMutations","mapState","name","data","computed","_objectSpread","methods","created","fetchEmployeeData","fetchOrderData","mounted","console","log","companyData"],"sources":["src/views/PayrollManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"manage\">\r\n<!--    <div class=\"manage-header\">-->\r\n<!--      &lt;!&ndash;新增按鈕&ndash;&gt;-->\r\n<!--      <el-button type=\"primary\" @click=\"dialogFormVisible = true\">+ 新增</el-button>-->\r\n<!--      <el-form :inline=\"true\" :model=\"queryForm\">-->\r\n<!--        <el-form-item>-->\r\n<!--          <el-input v-model=\"queryForm.queryKeyword\" placeholder=\"輸入帳號\"></el-input>-->\r\n<!--        </el-form-item>-->\r\n<!--        <el-form-item>-->\r\n<!--          <el-button type=\"primary\" @click=\"handlePage(1)\">查詢</el-button>-->\r\n<!--        </el-form-item>-->\r\n<!--      </el-form>-->\r\n<!--    </div>-->\r\n    <div class=\"common-tabel\">\r\n      <!--    人員薪資表格-->\r\n      <el-table\r\n          :data=\"salaryList\"\r\n          height=\"90%\"\r\n          stripe\r\n          style=\"width: 100%\">\r\n        <el-table-column\r\n            prop=\"name\"\r\n            label=\"員工姓名\"\r\n            width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column\r\n            prop= \"lastSalary\"\r\n            :label=\"`${lastMonth}月應付薪資`\"\r\n            width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column\r\n            prop=\"thisSalary\"\r\n            :label=\"`${currentMonth}月應付薪資`\"\r\n            width=\"180\">\r\n        </el-table-column>\r\n      </el-table>\r\n      <!--分頁功能-->\r\n<!--      <div class=\"pager\">-->\r\n<!--        <el-pagination-->\r\n<!--            :hide-on-single-page=\"true\"-->\r\n<!--            :current-page.sync=\"currentPage\"-->\r\n<!--            :page-size=\"pageSize\"-->\r\n<!--            :total=accountPageData.totalElements-->\r\n<!--            background-->\r\n<!--            layout=\"prev, pager, next\"-->\r\n<!--            @current-change=\"handlePage\">>-->\r\n<!--        </el-pagination>-->\r\n<!--      </div>-->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport {mapActions, mapGetters, mapMutations, mapState} from 'vuex';\r\nexport default {\r\n  name:'PayrollManagement',\r\n  data(){\r\n    return{\r\n      // currentPage: 1,\r\n      // pageSize: 10,\r\n      //彈窗開/關\r\n      // dialogFormVisible: false,\r\n      //employee表彈窗初始資料\r\n      // form: {\r\n      //   eName: '',\r\n      //   salary: '',\r\n      //   paid: '',\r\n      // },\r\n\r\n      // modelType:0, //0：新增窗口，1：修改窗口\r\n      //查詢功能信息\r\n      // queryForm:{\r\n      //   queryKeyword:'',\r\n      // },\r\n      // thisMonthSallary:[],\r\n      // lastMonthSallary:[],\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    ...mapState('data',['employeeData','orderData']),\r\n    ...mapGetters('data',[\r\n      'salaryList',\r\n      'currentMonth',\r\n      'lastMonth'\r\n    ]),\r\n  },\r\n  methods:{\r\n    ...mapActions('data',['fetchEmployeeData','fetchOrderData']),\r\n    // //點擊彈窗關閉時操作\r\n    // handleClose(){\r\n    //   this.$refs.form.resetFields();\r\n    //   this.form.employee.eid = ''\r\n    //   // console.log('清空資料')\r\n    //   this.dialogFormVisible = false;\r\n    // },\r\n    // //點擊編輯時操作\r\n    // handleEdit(row){\r\n    //   //設定為編輯窗口\r\n    //   this.modelType = 1;\r\n    //   //顯示彈窗\r\n    //   this.dialogFormVisible = true;\r\n    //   //【重要】使用深拷貝row資料來回顯到編輯窗口，若不使用深拷貝，則編輯的資料會與表格資料連動，會有錯誤\r\n    //   this.form = JSON.parse(JSON.stringify(row));\r\n    //   // console.log(this.form)\r\n    // },\r\n    // //點擊刪除時操作\r\n    // handleDelete(row) {\r\n    //   // console.log(row)\r\n    //   this.$confirm(`是否確定要刪除【${row.username}】的資料?`, '提示', {\r\n    //     confirmButtonText: '確定',\r\n    //     cancelButtonText: '取消',\r\n    //     type: 'warning'\r\n    //   }).then(() => {\r\n    //     // console.log(row.aid);\r\n    //     this.fetchDeleteAccount(row.aid).then(() => {\r\n    //       this.$message({\r\n    //         type: 'success',\r\n    //         message: '刪除成功!'\r\n    //       });\r\n    //       //重新查詢數據庫資料，更新數據\r\n    //       setTimeout(() => {\r\n    //         //重新查詢數據庫資料，更新數據\r\n    //         this.fetchGetAccountPageData({'pageNum':this.currentPage});\r\n    //       }, 200);\r\n    //     })\r\n    //\r\n    //   }).catch(() => {\r\n    //     this.$message({\r\n    //       type: 'info',\r\n    //       message: '已取消刪除'\r\n    //     });\r\n    //   });\r\n    // },\r\n  //   //提交用戶表單\r\n  //   submit(){\r\n  //     this.$refs.form.validate(valid => {\r\n  //       //驗證通過，執行if內的代碼\r\n  //       if(valid){\r\n  //         // console.log(\"新增帳號\")\r\n  //         this.form.eId = this.form.employee.eid\r\n  //         //新增或修改員工資料\r\n  //         this.fetchUpdateAccount(this.form);\r\n  //       }\r\n  //       //關閉彈窗\r\n  //       this.dialogFormVisible = false;\r\n  //       //清空form表單的數據\r\n  //       setTimeout(() => {\r\n  //         //重新查詢數據庫資料，更新數據\r\n  //         this.fetchGetAccountPageData({'pageNum':this.currentPage});\r\n  //         // this.$refs.form.resetFields();\r\n  //         this.$refs.form.resetFields();\r\n  //         this.form.employee.eid = '';\r\n  //       }, 200);\r\n  //\r\n  //     })\r\n  //   },\r\n  //   //切換分頁\r\n  //   handlePage(pageNum){\r\n  //     //將分頁頁碼保存到參數params中\r\n  //     const params = {'pageNum': pageNum,'queryKeyWord': this.queryForm.queryKeyword};\r\n  //     //請求查詢分頁信息\r\n  //     this.fetchGetAccountPageData(params);\r\n  //   },\r\n  // },\r\n  //點擊新增時操作\r\n  },\r\n  created() {\r\n    this.fetchEmployeeData();\r\n    this.fetchOrderData();\r\n  },\r\n  mounted() {\r\n    console.log(this.companyData)\r\n  }\r\n}\r\n</script>\r\n\r\n<style  scoped>\r\n/*.el-dialog__header , .el-dialog__body , .el-dialog__footer{*/\r\n/*  width: 400px;*/\r\n/*}*/\r\n.manage {\r\n  height: 100%;\r\n}\r\n\r\n.manage .manage-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.manage .common-tabel {\r\n  position: relative;\r\n  height: calc(100% - 62px);\r\n}\r\n\r\n.manage .common-tabel .pager {\r\n  position: absolute;\r\n  bottom: 40px;\r\n  right: 20px;\r\n}\r\n\r\n</style>"],"mappings":";;;;;;AAuDA,SAAAA,UAAA,EAAAC,UAAA,EAAAC,YAAA,EAAAC,QAAA;AACA;EACAC,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACA;EACA;EAEAC,QAAA,EAAAC,aAAA,CAAAA,aAAA,KACAJ,QAAA,0CACAF,UAAA,UACA,cACA,gBACA,YACA,EACA;EACAO,OAAA,EAAAD,aAAA,KACAP,UAAA,kDA8EA;EACAS,OAAA,WAAAA,QAAA;IACA,KAAAC,iBAAA;IACA,KAAAC,cAAA;EACA;EACAC,OAAA,WAAAA,QAAA;IACAC,OAAA,CAAAC,GAAA,MAAAC,WAAA;EACA;AACA"}]}