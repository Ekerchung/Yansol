{"remainingRequest":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\babel-loader\\lib\\index.js!D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\src\\views\\User.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\src\\views\\User.vue","mtime":1682588160506},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\babel.config.js","mtime":1681747183855},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681747155761},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1681747156896},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681747155761},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1681747158581}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:/develop_tools/work/maven-work/Yansol/msystem-web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { getUser, addUser, editUser, delUser } from \"../api\";\nexport default {\n  data: function data() {\n    return {\n      dialogVisible: false,\n      form: {\n        name: '',\n        age: '',\n        sex: '',\n        birth: '',\n        addr: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入姓名'\n        }],\n        age: [{\n          required: true,\n          message: '请输入年龄'\n        }],\n        sex: [{\n          required: true,\n          message: '请选择性别'\n        }],\n        birth: [{\n          required: true,\n          message: '请选择出生日期'\n        }],\n        addr: [{\n          required: true,\n          message: '请输入地址'\n        }]\n      },\n      tableData: [],\n      modalType: 0,\n      // 0表示新增的弹窗， 1表示编辑\n      total: 0,\n      //当前的总条数\n      pageData: {\n        page: 1,\n        limit: 10\n      },\n      userForm: {\n        name: ''\n      }\n    };\n  },\n  methods: {\n    // 提交用户表单\n    submit: function submit() {\n      var _this = this;\n      this.$refs.form.validate(function (valid) {\n        // console.log(valid, 'valid')\n        if (valid) {\n          // 后续对表单数据的处理\n          if (_this.modalType === 0) {\n            addUser(_this.form).then(function () {\n              // 重新获取列表的接口\n              _this.getList();\n            });\n          } else {\n            editUser(_this.form).then(function () {\n              // 重新获取列表的接口\n              _this.getList();\n            });\n          }\n\n          // 清空表单的数据\n          _this.$refs.form.resetFields();\n          // 关闭弹窗\n          _this.dialogVisible = false;\n        }\n      });\n    },\n    // 弹窗关闭的时候\n    handleClose: function handleClose() {\n      this.$refs.form.resetFields();\n      this.dialogVisible = false;\n    },\n    cancel: function cancel() {\n      this.handleClose();\n    },\n    handleEdit: function handleEdit(row) {\n      this.modalType = 1;\n      this.dialogVisible = true;\n      // 注意需要对当前行数据进行深拷贝，否则会出错\n      this.form = JSON.parse(JSON.stringify(row));\n    },\n    handleDelete: function handleDelete(row) {\n      var _this2 = this;\n      this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        delUser({\n          id: row.id\n        }).then(function () {\n          _this2.$message({\n            type: 'success',\n            message: '删除成功!'\n          });\n          // 重新获取列表的接口\n          _this2.getList();\n        });\n      }).catch(function () {\n        _this2.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    handleAdd: function handleAdd() {\n      this.modalType = 0;\n      this.dialogVisible = true;\n    },\n    // 获取列表的数据\n    getList: function getList() {\n      var _this3 = this;\n      // 获取的列表的数据\n      getUser({\n        params: _objectSpread(_objectSpread({}, this.userForm), this.pageData)\n      }).then(function (_ref) {\n        var data = _ref.data;\n        console.log(data);\n        _this3.tableData = data.list;\n        _this3.total = data.count || 0;\n      });\n    },\n    // 选择页码的回调函数\n    handlePage: function handlePage(val) {\n      // console.log(val, 'val')\n      this.pageData.page = val;\n      this.getList();\n    },\n    // 列表的查询\n    onSubmit: function onSubmit() {\n      this.getList();\n    }\n  },\n  mounted: function mounted() {\n    this.getList();\n  }\n};",{"version":3,"names":["getUser","addUser","editUser","delUser","data","dialogVisible","form","name","age","sex","birth","addr","rules","required","message","tableData","modalType","total","pageData","page","limit","userForm","methods","submit","_this","$refs","validate","valid","then","getList","resetFields","handleClose","cancel","handleEdit","row","JSON","parse","stringify","handleDelete","_this2","$confirm","confirmButtonText","cancelButtonText","type","id","$message","catch","handleAdd","_this3","params","_objectSpread","_ref","console","log","list","count","handlePage","val","onSubmit","mounted"],"sources":["src/views/User.vue"],"sourcesContent":["<template>\r\n    <div class=\"manage\">\r\n        <el-dialog\r\n            title=\"提示\"\r\n            :visible.sync=\"dialogVisible\"\r\n            width=\"50%\"\r\n            :before-close=\"handleClose\">\r\n            <!-- 用户的表单信息 -->\r\n            <el-form ref=\"form\" :rules=\"rules\" :inline=\"true\" :model=\"form\" label-width=\"80px\">\r\n                <el-form-item label=\"姓名\" prop=\"name\">\r\n                    <el-input placeholder=\"请输入姓名\" v-model=\"form.name\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"年龄\" prop=\"age\">\r\n                    <el-input placeholder=\"请输入年龄\" v-model=\"form.age\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"性别\" prop=\"sex\">\r\n                    <el-select v-model=\"form.sex\" placeholder=\"请选择\">\r\n                        <el-option label=\"男\" :value=\"1\"></el-option>\r\n                        <el-option label=\"女\" :value=\"0\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"出生日期\" prop=\"birth\">\r\n                    <el-date-picker\r\n                        v-model=\"form.birth\"\r\n                        type=\"date\"\r\n                        placeholder=\"选择日期\"\r\n                        value-format=\"yyyy-MM-DD\">\r\n                    </el-date-picker>\r\n                </el-form-item>\r\n                <el-form-item label=\"地址\" prop=\"addr\">\r\n                    <el-input placeholder=\"请输入地址\" v-model=\"form.addr\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"cancel\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"submit\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n        <div class=\"manage-header\">\r\n            <el-button @click=\"handleAdd\" type=\"primary\">\r\n                + 新增\r\n            </el-button>\r\n            <!-- form搜索区域 -->\r\n            <el-form :inline=\"true\" :model=\"userForm\">\r\n                <el-form-item>\r\n                    <el-input placeholder=\"请输入名称\" v-model=\"userForm.name\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"onSubmit\">查询</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n        <div class=\"common-tabel\">\r\n            <el-table\r\n                stripe\r\n                height=\"90%\"\r\n                :data=\"tableData\"\r\n                style=\"width: 100%\">\r\n                <el-table-column\r\n                    prop=\"name\"\r\n                    label=\"姓名\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"sex\"\r\n                    label=\"性别\">\r\n                    <template slot-scope=\"scope\">\r\n                        <span>{{ scope.row.sex == 1 ? '男' : '女' }}</span>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"age\"\r\n                    label=\"年龄\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"birth\"\r\n                    label=\"出生日期\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"addr\"\r\n                    label=\"地址\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"addr\"\r\n                    label=\"地址\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n                        <el-button type=\"danger\" size=\"mini\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n\r\n            </el-table>\r\n            <div class=\"pager\">\r\n                <el-pagination\r\n                    layout=\"prev, pager, next\"\r\n                    :total=\"total\"\r\n                    @current-change=\"handlePage\">\r\n                </el-pagination>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { getUser, addUser, editUser, delUser } from '../api'\r\nexport default {\r\n    data() {\r\n        return {\r\n            dialogVisible: false,\r\n            form: {\r\n                name: '',\r\n                age: '',\r\n                sex: '',\r\n                birth: '',\r\n                addr: ''\r\n            },\r\n            rules: {\r\n                name: [\r\n                    { required: true, message: '请输入姓名' }\r\n                ],\r\n                age: [\r\n                    { required: true, message: '请输入年龄' }\r\n                ],\r\n                sex: [\r\n                    { required: true, message: '请选择性别' }\r\n                ],\r\n                birth: [\r\n                    { required: true, message: '请选择出生日期' }\r\n                ],\r\n                addr: [\r\n                    { required: true, message: '请输入地址' }\r\n                ]\r\n            },\r\n            tableData: [],\r\n            modalType: 0, // 0表示新增的弹窗， 1表示编辑\r\n            total: 0, //当前的总条数\r\n            pageData: {\r\n                page: 1,\r\n                limit: 10\r\n            },\r\n            userForm: {\r\n                name: ''\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        // 提交用户表单\r\n        submit() {\r\n            this.$refs.form.validate((valid) => {\r\n                // console.log(valid, 'valid')\r\n                if (valid) {\r\n                    // 后续对表单数据的处理\r\n                    if (this.modalType === 0) {\r\n                        addUser(this.form).then(() => {\r\n                            // 重新获取列表的接口\r\n                            this.getList()\r\n                        })\r\n                    } else {\r\n                        editUser(this.form).then(() => {\r\n                            // 重新获取列表的接口\r\n                            this.getList()\r\n                        })\r\n                    }\r\n\r\n                    // 清空表单的数据\r\n                    this.$refs.form.resetFields()\r\n                    // 关闭弹窗\r\n                    this.dialogVisible = false\r\n                }\r\n            })\r\n        },\r\n        // 弹窗关闭的时候\r\n        handleClose() {\r\n            this.$refs.form.resetFields()\r\n            this.dialogVisible = false\r\n        },\r\n        cancel() {\r\n            this.handleClose()\r\n        },\r\n        handleEdit(row) {\r\n            this.modalType = 1\r\n            this.dialogVisible = true\r\n            // 注意需要对当前行数据进行深拷贝，否则会出错\r\n            this.form = JSON.parse(JSON.stringify(row))\r\n        },\r\n        handleDelete(row) {\r\n            this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n                }).then(() => {\r\n                    delUser({ id: row.id }).then(() => {\r\n                        this.$message({\r\n                            type: 'success',\r\n                            message: '删除成功!'\r\n                        });\r\n                        // 重新获取列表的接口\r\n                        this.getList()\r\n                    })\r\n                    \r\n                }).catch(() => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '已取消删除'\r\n                    });          \r\n            });\r\n        },\r\n        handleAdd() {\r\n            this.modalType = 0\r\n            this.dialogVisible = true\r\n        },\r\n        // 获取列表的数据\r\n        getList() {\r\n            // 获取的列表的数据\r\n            getUser({params: {...this.userForm, ...this.pageData}}).then(({ data }) => {\r\n                console.log(data)\r\n                this.tableData = data.list\r\n\r\n                this.total = data.count || 0\r\n            })\r\n        },\r\n        // 选择页码的回调函数\r\n        handlePage(val) {\r\n            // console.log(val, 'val')\r\n            this.pageData.page = val\r\n            this.getList()\r\n        },\r\n        // 列表的查询\r\n        onSubmit() {\r\n            this.getList()\r\n        }\r\n    },\r\n    mounted () {\r\n        this.getList()\r\n    }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.manage {\r\n    height: 90%;\r\n    .manage-header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n    .common-tabel {\r\n        position: relative;\r\n        height: calc(100% - 62px);\r\n        .pager {\r\n            position: absolute;\r\n            bottom: 0;\r\n            right: 20px;\r\n        }\r\n    }\r\n}\r\n</style>"],"mappings":"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"}]}