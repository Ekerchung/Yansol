{"remainingRequest":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\babel-loader\\lib\\index.js!D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\src\\store\\data.js","dependencies":[{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\src\\store\\data.js","mtime":1682522011757},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\babel.config.js","mtime":1681747183855},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681747155761},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1681747156896},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\eslint-loader\\index.js","mtime":1681747154294}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"D:/develop_tools/work/maven-work/Yansol/msystem-web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { getCompanyData, getEmployeeData, getGoodData, getOrderData, getReturnData } from \"../api\";\nimport _ from 'lodash';\nimport moment from \"moment\";\nexport default {\n  namespaced: true,\n  actions: {\n    fetchGoodData: function fetchGoodData(context) {\n      return getGoodData().then(function (response) {\n        context.commit('setGoodData', response.data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    fetchCompanyData: function fetchCompanyData(context) {\n      return getCompanyData().then(function (response) {\n        console.log('調用了fetchCompanyData');\n        context.commit('setCompanyData', response.data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    fetchEmployeeData: function fetchEmployeeData(context) {\n      return getEmployeeData().then(function (response) {\n        console.log('調用了fetchEmployeeData');\n        context.commit('setEmployeeData', response.data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    fetchOrderData: function fetchOrderData(context) {\n      return getOrderData().then(function (response) {\n        console.log('調用了fetchOrderData');\n        context.commit('setOrderData', response.data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    fetchReturnData: function fetchReturnData(context) {\n      return getReturnData().then(function (response) {\n        console.log('調用了fetchReturnData');\n        context.commit('setReturnData', response.data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  },\n  getters: {\n    //當前年份\n    currentYear: function currentYear(state) {\n      return new Date().getFullYear();\n    },\n    //去年年份\n    lastYear: function lastYear(state, getters) {\n      return getters.currentYear - 1;\n    },\n    //今年每月營收\n    monthlyRevenue: function monthlyRevenue(state) {\n      var goodDataList = state.goodData;\n      // 首先使用lodash將數據按照月份進行分組\n      var byMonth = _.groupBy(goodDataList, function (good) {\n        return good.pDate.slice(0, 7);\n      });\n      // 然後對每個月份的訂單進行總收入計算，最後得到的monthlyRevenue對象的鍵表示月份（如'2022-01'），值表示當月的總收入（如300）\n      var monthlyRevenue = _.mapValues(byMonth, function (goodDataList) {\n        return _.sumBy(goodDataList, 'totalPrice') / 1000;\n      });\n      return monthlyRevenue;\n    },\n    //取得廠商當年營收及去年營收\n    companySalesList: function companySalesList(state, getters) {\n      //在返回的company數據中添加當年營收及去年營收欄位\n      var companySalesList = state.companyData.map(function (c) {\n        return _objectSpread(_objectSpread({}, c), {}, {\n          total_sales_this_year: 0,\n          total_sales_last_year: 0\n        });\n      });\n      //取得當前年份\n      var currentYear = new Date().getFullYear();\n      //取得去年年份\n      var lastYear = currentYear - 1;\n      //由this.goodDate中取得當前年份的營收\n      var _loop = function _loop() {\n        var item = state.goodData[i];\n        if (item.pDate.includes(getters.currentYear)) {\n          var company = companySalesList.find(function (c) {\n            return c.companyId === item.company.companyId;\n          });\n          if (company) {\n            company.total_sales_this_year += item.totalPrice;\n          }\n          //由this.goodDate中取得去年年份的營收\n        } else if (item.pDate.includes(getters.lastYear)) {\n          var companyLastYear = companySalesList.find(function (c) {\n            return c.companyId === item.company.companyId;\n          });\n          if (companyLastYear) {\n            companyLastYear.total_sales_last_year += item.totalPrice;\n          }\n        }\n      };\n      for (var i = 0; i < state.goodData.length; i++) {\n        _loop();\n      }\n      //將取的資料保存到companySalesList\n      return companySalesList;\n    },\n    employeeSalesList: function employeeSalesList(state, getters) {\n      //以下處理myChart3所需數據\n      var employeeDataList = state.employeeData.map(function (c) {\n        return _objectSpread(_objectSpread({}, c), {}, {\n          total_sales_this_month: 0\n        });\n      });\n      //由order篩選出當月每個員工的收入\n      var _loop2 = function _loop2() {\n        var item = state.orderData[i];\n        if (item.oDate.includes(getters.currentMonth)) {\n          var employee = employeeDataList.find(function (e) {\n            return e.eid === item.employee.eid;\n          });\n          if (employee) {\n            employeeDataList[item.employee.eid].total_sales_this_month += item.ototalPrice;\n          }\n        }\n      };\n      for (var i = 0; i < state.orderData.length; i++) {\n        _loop2();\n      }\n      //將當月每個員工的收入依myChart3所需格式保存到map中\n      var mappedDataList = employeeDataList.map(function (item, index, arr) {\n        return {\n          name: item.ename,\n          value: item.total_sales_this_month\n        };\n      });\n      return mappedDataList;\n    },\n    //使用moment.js取得當前時間，格式為\"YYYY-MM-DD\"\n    currentDate: function currentDate(state) {\n      var moment = require('moment');\n      var currentDate = moment().format('YYYY-MM-DD');\n      return currentDate;\n    },\n    //使用moment.js取得當前月份，格式為\"YYYY-MM\"\n    currentMonth: function currentMonth(state) {\n      var moment = require('moment');\n      var currentMonth = moment().format('YYYY-MM');\n      return currentMonth;\n    },\n    //每月進貨清單\n    monthlyPurchaseList: function monthlyPurchaseList(state, getters) {\n      return state.goodData.filter(function (g) {\n        return g.pDate && g.pDate !== 0;\n      }).filter(function (g) {\n        return g.pDate.slice(0, 7) === getters.currentMonth;\n      });\n    },\n    //每日進貨清單\n    dailyPurchaseList: function dailyPurchaseList(state, getters) {\n      return getters.monthlyPurchaseList.filter(function (g) {\n        return g.pDate === getters.currentDate;\n      });\n    },\n    //每月出貨清單\n    monthlyShipList: function monthlyShipList(state, getters) {\n      return state.goodData.filter(function (g) {\n        return g.sDate && g.sDate !== 0;\n      }).filter(function (g) {\n        return g.sDate.slice(0, 7) === getters.currentMonth;\n      });\n    },\n    //每日出貨清單\n    dailyShipList: function dailyShipList(state, getters) {\n      return getters.monthlyShipList.filter(function (g) {\n        return g.sDate === getters.currentDate;\n      });\n    },\n    //每月退貨清單\n    monthlyReturnList: function monthlyReturnList(state, getters) {\n      return state.returnData.filter(function (r) {\n        return r.returnDate && r.returnDate !== 0;\n      }).filter(function (r) {\n        return r.returnDate.slice(0, 7) === getters.currentMonth;\n      });\n    },\n    //每日退貨清單\n    dailyReturnList: function dailyReturnList(state, getters) {\n      return getters.monthlyReturnList.filter(function (r) {\n        return r.returnDate === getters.currentDate;\n      });\n    },\n    //求得當月應收款\n    monthlyAccountsReceivable: function monthlyAccountsReceivable(state, getters) {\n      var monthlyAccountsReceivable = 0;\n      for (var i = 0; i < getters.monthlyShipList.length; i++) {\n        monthlyAccountsReceivable += getters.monthlyShipList[i].totalPrice;\n      }\n      return monthlyAccountsReceivable;\n    },\n    //求得當日應收款\n    dailyAccountsReceivable: function dailyAccountsReceivable(state, getters) {\n      var dailyAccountsReceivable = 0;\n      for (var i = 0; i < getters.dailyShipList.length; i++) {\n        dailyAccountsReceivable += getters.dailyShipList[i].totalPrice;\n      }\n      return dailyAccountsReceivable;\n    }\n  },\n  mutations: {\n    setGoodData: function setGoodData(state, data) {\n      // 添加goodData數據\n      state.goodData = data;\n    },\n    setCompanyData: function setCompanyData(state, year) {\n      // 添加companyData數據\n      state.companyData = year;\n    },\n    setEmployeeData: function setEmployeeData(state, year) {\n      // 添加employeeData數據\n      state.employeeData = year;\n    },\n    setOrderData: function setOrderData(state, data) {\n      // 添加orderData數據\n      state.orderData = data;\n    },\n    setReturnData: function setReturnData(state, data) {\n      // 添加returnData數據\n      state.returnData = data;\n    },\n    setCountData: function setCountData(state, data) {\n      // 添加countData數據\n      state.countData = data;\n    }\n  },\n  state: {\n    goodData: [],\n    companyData: [],\n    employeeData: [],\n    orderData: [],\n    returnData: [],\n    countData: [{\n      name: \"今日進貨\",\n      value: '',\n      icon: \"success\",\n      color: \"#2ec7c9\"\n    }, {\n      name: \"今日出貨\",\n      value: '',\n      icon: \"truck\",\n      color: \"#ffb980\"\n    }, {\n      name: \"今日退貨\",\n      value: '',\n      icon: \"message-solid\",\n      color: \"#c55aef\"\n    }, {\n      name: \"今日應收款\",\n      value: '',\n      icon: \"coin\",\n      color: \"#5ab1ef\"\n    }, {\n      name: \"本月進貨\",\n      value: '',\n      icon: \"success\",\n      color: \"#2ec7c9\"\n    }, {\n      name: \"本月出貨\",\n      value: '',\n      icon: \"truck\",\n      color: \"#ffb980\"\n    }, {\n      name: \"本月退貨\",\n      value: '',\n      icon: \"message-solid\",\n      color: \"#c55aef\"\n    }, {\n      name: \"本月應收款\",\n      value: '',\n      icon: \"coin\",\n      color: \"#5ab1ef\"\n    }]\n  }\n};",{"version":3,"names":["getCompanyData","getEmployeeData","getGoodData","getOrderData","getReturnData","_","moment","namespaced","actions","fetchGoodData","context","then","response","commit","data","catch","error","console","fetchCompanyData","log","fetchEmployeeData","fetchOrderData","fetchReturnData","getters","currentYear","state","Date","getFullYear","lastYear","monthlyRevenue","goodDataList","goodData","byMonth","groupBy","good","pDate","slice","mapValues","sumBy","companySalesList","companyData","map","c","_objectSpread","total_sales_this_year","total_sales_last_year","_loop","item","i","includes","company","find","companyId","totalPrice","companyLastYear","length","employeeSalesList","employeeDataList","employeeData","total_sales_this_month","_loop2","orderData","oDate","currentMonth","employee","e","eid","ototalPrice","mappedDataList","index","arr","name","ename","value","currentDate","require","format","monthlyPurchaseList","filter","g","dailyPurchaseList","monthlyShipList","sDate","dailyShipList","monthlyReturnList","returnData","r","returnDate","dailyReturnList","monthlyAccountsReceivable","dailyAccountsReceivable","mutations","setGoodData","setCompanyData","year","setEmployeeData","setOrderData","setReturnData","setCountData","countData","icon","color"],"sources":["D:/develop_tools/work/maven-work/Yansol/msystem-web/src/store/data.js"],"sourcesContent":["import {getCompanyData, getEmployeeData, getGoodData, getOrderData, getReturnData} from \"../api\";\r\nimport _ from 'lodash';\r\nimport moment from \"moment\";\r\n\r\nexport default {\r\n    namespaced:true,\r\n    actions:{\r\n        fetchGoodData(context) {\r\n            return getGoodData()\r\n                .then((response) => {\r\n                    context.commit('setGoodData', response.data)\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error)\r\n                })\r\n        },\r\n        fetchCompanyData(context) {\r\n            return getCompanyData()\r\n                .then((response) => {\r\n                    console.log('調用了fetchCompanyData')\r\n                    context.commit('setCompanyData', response.data)\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error)\r\n                })\r\n        },\r\n        fetchEmployeeData(context) {\r\n            return getEmployeeData()\r\n                .then((response) => {\r\n                    console.log('調用了fetchEmployeeData')\r\n                    context.commit('setEmployeeData', response.data)\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error)\r\n                })\r\n        },\r\n        fetchOrderData(context) {\r\n            return getOrderData()\r\n                .then((response) => {\r\n                    console.log('調用了fetchOrderData')\r\n                    context.commit('setOrderData', response.data)\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error)\r\n                })\r\n        },\r\n        fetchReturnData(context) {\r\n            return getReturnData()\r\n                .then((response) => {\r\n                    console.log('調用了fetchReturnData')\r\n                    context.commit('setReturnData', response.data)\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error)\r\n                })\r\n        }\r\n    },\r\n    getters: {\r\n        //當前年份\r\n        currentYear(state) {\r\n            return new Date().getFullYear();\r\n        },\r\n        //去年年份\r\n        lastYear(state,getters) {\r\n            return getters.currentYear - 1;\r\n        },\r\n        //今年每月營收\r\n        monthlyRevenue(state) {\r\n            let goodDataList = state.goodData;\r\n            // 首先使用lodash將數據按照月份進行分組\r\n            const byMonth = _.groupBy(goodDataList, good => good.pDate.slice(0, 7));\r\n            // 然後對每個月份的訂單進行總收入計算，最後得到的monthlyRevenue對象的鍵表示月份（如'2022-01'），值表示當月的總收入（如300）\r\n            const monthlyRevenue = _.mapValues(byMonth, goodDataList => _.sumBy(goodDataList, 'totalPrice')/1000);\r\n            return monthlyRevenue;\r\n        },\r\n        //取得廠商當年營收及去年營收\r\n        companySalesList(state,getters) {\r\n            //在返回的company數據中添加當年營收及去年營收欄位\r\n            let companySalesList = state.companyData.map(c => ({ ...c, total_sales_this_year: 0,total_sales_last_year: 0 }));\r\n            //取得當前年份\r\n            let currentYear = new Date().getFullYear();\r\n            //取得去年年份\r\n            let lastYear = currentYear-1;\r\n            //由this.goodDate中取得當前年份的營收\r\n            for (let i = 0; i < state.goodData.length; i++) {\r\n                let item = state.goodData[i];\r\n                if(item.pDate.includes(getters.currentYear)){\r\n                    let company = companySalesList.find(c => c.companyId === item.company.companyId );\r\n                    if (company) {\r\n                        company.total_sales_this_year += item.totalPrice;\r\n                    }\r\n                    //由this.goodDate中取得去年年份的營收\r\n                }else if(item.pDate.includes(getters.lastYear)){\r\n                    let companyLastYear = companySalesList.find(c => c.companyId === item.company.companyId );\r\n                    if (companyLastYear) {\r\n                        companyLastYear.total_sales_last_year += item.totalPrice;\r\n                    }\r\n                }\r\n            }\r\n            //將取的資料保存到companySalesList\r\n            return companySalesList;\r\n        },\r\n        employeeSalesList(state,getters) {\r\n            //以下處理myChart3所需數據\r\n            let employeeDataList = state.employeeData.map(c => ({ ...c, total_sales_this_month: 0}));\r\n            //由order篩選出當月每個員工的收入\r\n            for (let i = 0; i < state.orderData.length; i++) {\r\n                let item = state.orderData[i];\r\n                if(item.oDate.includes(getters.currentMonth)){\r\n                    let employee = employeeDataList.find(e => e.eid === item.employee.eid );\r\n                    if (employee) {\r\n                        employeeDataList[item.employee.eid].total_sales_this_month += item.ototalPrice;\r\n                    }\r\n                }\r\n            }\r\n            //將當月每個員工的收入依myChart3所需格式保存到map中\r\n            let mappedDataList = employeeDataList.map((item, index, arr) => {\r\n                return {\r\n                    name: item.ename,\r\n                    value: item.total_sales_this_month\r\n                };\r\n            });\r\n            return mappedDataList;\r\n        },\r\n        //使用moment.js取得當前時間，格式為\"YYYY-MM-DD\"\r\n        currentDate(state) {\r\n            let moment = require('moment');\r\n            let currentDate = moment().format('YYYY-MM-DD');\r\n            return currentDate;\r\n        },\r\n        //使用moment.js取得當前月份，格式為\"YYYY-MM\"\r\n        currentMonth(state) {\r\n            let moment = require('moment');\r\n            let currentMonth = moment().format('YYYY-MM');\r\n            return currentMonth\r\n        },\r\n        //每月進貨清單\r\n        monthlyPurchaseList(state,getters) {\r\n\r\n            return state.goodData.filter(g => g.pDate && g.pDate !== 0).filter(g => g.pDate.slice(0, 7) === getters.currentMonth);\r\n        },\r\n        //每日進貨清單\r\n        dailyPurchaseList(state,getters) {\r\n            return getters.monthlyPurchaseList.filter(g => g.pDate === getters.currentDate);\r\n        },\r\n        //每月出貨清單\r\n        monthlyShipList(state,getters) {\r\n            return state.goodData.filter(g => g.sDate && g.sDate !== 0).filter(g => g.sDate.slice(0, 7) === getters.currentMonth);\r\n        },\r\n        //每日出貨清單\r\n        dailyShipList(state,getters) {\r\n            return getters.monthlyShipList.filter(g => g.sDate === getters.currentDate);\r\n        },\r\n        //每月退貨清單\r\n        monthlyReturnList(state,getters) {\r\n            return state.returnData.filter(r => r.returnDate && r.returnDate !== 0).filter(r => r.returnDate.slice(0, 7) === getters.currentMonth);\r\n        },\r\n        //每日退貨清單\r\n        dailyReturnList(state,getters) {\r\n            return getters.monthlyReturnList.filter(r => r.returnDate === getters.currentDate);\r\n        },\r\n        //求得當月應收款\r\n        monthlyAccountsReceivable(state,getters) {\r\n            let monthlyAccountsReceivable = 0;\r\n            for(let i = 0; i < getters.monthlyShipList.length; i++){\r\n                monthlyAccountsReceivable += getters.monthlyShipList[i].totalPrice;\r\n            }\r\n            return monthlyAccountsReceivable;\r\n        },\r\n        //求得當日應收款\r\n        dailyAccountsReceivable(state,getters) {\r\n            let dailyAccountsReceivable = 0;\r\n            for(let i = 0; i < getters.dailyShipList.length; i++){\r\n                dailyAccountsReceivable += getters.dailyShipList[i].totalPrice;\r\n            }\r\n            return dailyAccountsReceivable;\r\n        },\r\n    },\r\n    mutations:{\r\n        setGoodData(state, data) { // 添加goodData數據\r\n            state.goodData = data;\r\n        },\r\n        setCompanyData(state, year) { // 添加companyData數據\r\n            state.companyData = year;\r\n        },\r\n        setEmployeeData(state, year) { // 添加employeeData數據\r\n            state.employeeData = year;\r\n        },\r\n        setOrderData(state, data) { // 添加orderData數據\r\n            state.orderData = data;\r\n        },\r\n        setReturnData(state, data) { // 添加returnData數據\r\n            state.returnData = data;\r\n        },\r\n        setCountData(state, data) { // 添加countData數據\r\n            state.countData = data;\r\n        },\r\n    },\r\n    state:{\r\n        goodData: [],\r\n        companyData: [],\r\n        employeeData: [],\r\n        orderData: [],\r\n        returnData: [],\r\n        countData: [\r\n            {\r\n                name: \"今日進貨\",\r\n                value: '',\r\n                icon: \"success\",\r\n                color: \"#2ec7c9\",\r\n            },\r\n            {\r\n                name: \"今日出貨\",\r\n                value: '',\r\n                icon: \"truck\",\r\n                color: \"#ffb980\",\r\n            },\r\n            {\r\n                name: \"今日退貨\",\r\n                value: '',\r\n                icon: \"message-solid\",\r\n                color: \"#c55aef\",\r\n            },\r\n            {\r\n                name: \"今日應收款\",\r\n                value: '',\r\n                icon: \"coin\",\r\n                color: \"#5ab1ef\",\r\n            },\r\n            {\r\n                name: \"本月進貨\",\r\n                value: '',\r\n                icon: \"success\",\r\n                color: \"#2ec7c9\",\r\n            },\r\n            {\r\n                name: \"本月出貨\",\r\n                value: '',\r\n                icon: \"truck\",\r\n                color: \"#ffb980\",\r\n            },\r\n            {\r\n                name: \"本月退貨\",\r\n                value: '',\r\n                icon: \"message-solid\",\r\n                color: \"#c55aef\",\r\n            },\r\n            {\r\n                name: \"本月應收款\",\r\n                value: '',\r\n                icon: \"coin\",\r\n                color: \"#5ab1ef\",\r\n            },\r\n        ]\r\n    }\r\n}"],"mappings":";;;;;;;;;AAAA,SAAQA,cAAc,EAAEC,eAAe,EAAEC,WAAW,EAAEC,YAAY,EAAEC,aAAa;AACjF,OAAOC,CAAC,MAAM,QAAQ;AACtB,OAAOC,MAAM,MAAM,QAAQ;AAE3B,eAAe;EACXC,UAAU,EAAC,IAAI;EACfC,OAAO,EAAC;IACJC,aAAa,WAAAA,cAACC,OAAO,EAAE;MACnB,OAAOR,WAAW,EAAE,CACfS,IAAI,CAAC,UAACC,QAAQ,EAAK;QAChBF,OAAO,CAACG,MAAM,CAAC,aAAa,EAAED,QAAQ,CAACE,IAAI,CAAC;MAChD,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK,EAAK;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB,CAAC,CAAC;IACV,CAAC;IACDE,gBAAgB,WAAAA,iBAACR,OAAO,EAAE;MACtB,OAAOV,cAAc,EAAE,CAClBW,IAAI,CAAC,UAACC,QAAQ,EAAK;QAChBK,OAAO,CAACE,GAAG,CAAC,qBAAqB,CAAC;QAClCT,OAAO,CAACG,MAAM,CAAC,gBAAgB,EAAED,QAAQ,CAACE,IAAI,CAAC;MACnD,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK,EAAK;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB,CAAC,CAAC;IACV,CAAC;IACDI,iBAAiB,WAAAA,kBAACV,OAAO,EAAE;MACvB,OAAOT,eAAe,EAAE,CACnBU,IAAI,CAAC,UAACC,QAAQ,EAAK;QAChBK,OAAO,CAACE,GAAG,CAAC,sBAAsB,CAAC;QACnCT,OAAO,CAACG,MAAM,CAAC,iBAAiB,EAAED,QAAQ,CAACE,IAAI,CAAC;MACpD,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK,EAAK;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB,CAAC,CAAC;IACV,CAAC;IACDK,cAAc,WAAAA,eAACX,OAAO,EAAE;MACpB,OAAOP,YAAY,EAAE,CAChBQ,IAAI,CAAC,UAACC,QAAQ,EAAK;QAChBK,OAAO,CAACE,GAAG,CAAC,mBAAmB,CAAC;QAChCT,OAAO,CAACG,MAAM,CAAC,cAAc,EAAED,QAAQ,CAACE,IAAI,CAAC;MACjD,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK,EAAK;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB,CAAC,CAAC;IACV,CAAC;IACDM,eAAe,WAAAA,gBAACZ,OAAO,EAAE;MACrB,OAAON,aAAa,EAAE,CACjBO,IAAI,CAAC,UAACC,QAAQ,EAAK;QAChBK,OAAO,CAACE,GAAG,CAAC,oBAAoB,CAAC;QACjCT,OAAO,CAACG,MAAM,CAAC,eAAe,EAAED,QAAQ,CAACE,IAAI,CAAC;MAClD,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK,EAAK;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB,CAAC,CAAC;IACV;EACJ,CAAC;EACDO,OAAO,EAAE;IACL;IACAC,WAAW,WAAAA,YAACC,KAAK,EAAE;MACf,OAAO,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;IACnC,CAAC;IACD;IACAC,QAAQ,WAAAA,SAACH,KAAK,EAACF,OAAO,EAAE;MACpB,OAAOA,OAAO,CAACC,WAAW,GAAG,CAAC;IAClC,CAAC;IACD;IACAK,cAAc,WAAAA,eAACJ,KAAK,EAAE;MAClB,IAAIK,YAAY,GAAGL,KAAK,CAACM,QAAQ;MACjC;MACA,IAAMC,OAAO,GAAG3B,CAAC,CAAC4B,OAAO,CAACH,YAAY,EAAE,UAAAI,IAAI;QAAA,OAAIA,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MAAA,EAAC;MACvE;MACA,IAAMP,cAAc,GAAGxB,CAAC,CAACgC,SAAS,CAACL,OAAO,EAAE,UAAAF,YAAY;QAAA,OAAIzB,CAAC,CAACiC,KAAK,CAACR,YAAY,EAAE,YAAY,CAAC,GAAC,IAAI;MAAA,EAAC;MACrG,OAAOD,cAAc;IACzB,CAAC;IACD;IACAU,gBAAgB,WAAAA,iBAACd,KAAK,EAACF,OAAO,EAAE;MAC5B;MACA,IAAIgB,gBAAgB,GAAGd,KAAK,CAACe,WAAW,CAACC,GAAG,CAAC,UAAAC,CAAC;QAAA,OAAAC,aAAA,CAAAA,aAAA,KAAUD,CAAC;UAAEE,qBAAqB,EAAE,CAAC;UAACC,qBAAqB,EAAE;QAAC;MAAA,CAAG,CAAC;MAChH;MACA,IAAIrB,WAAW,GAAG,IAAIE,IAAI,EAAE,CAACC,WAAW,EAAE;MAC1C;MACA,IAAIC,QAAQ,GAAGJ,WAAW,GAAC,CAAC;MAC5B;MAAA,IAAAsB,KAAA,YAAAA,MAAA,EACgD;QAC5C,IAAIC,IAAI,GAAGtB,KAAK,CAACM,QAAQ,CAACiB,CAAC,CAAC;QAC5B,IAAGD,IAAI,CAACZ,KAAK,CAACc,QAAQ,CAAC1B,OAAO,CAACC,WAAW,CAAC,EAAC;UACxC,IAAI0B,OAAO,GAAGX,gBAAgB,CAACY,IAAI,CAAC,UAAAT,CAAC;YAAA,OAAIA,CAAC,CAACU,SAAS,KAAKL,IAAI,CAACG,OAAO,CAACE,SAAS;UAAA,EAAE;UACjF,IAAIF,OAAO,EAAE;YACTA,OAAO,CAACN,qBAAqB,IAAIG,IAAI,CAACM,UAAU;UACpD;UACA;QACJ,CAAC,MAAK,IAAGN,IAAI,CAACZ,KAAK,CAACc,QAAQ,CAAC1B,OAAO,CAACK,QAAQ,CAAC,EAAC;UAC3C,IAAI0B,eAAe,GAAGf,gBAAgB,CAACY,IAAI,CAAC,UAAAT,CAAC;YAAA,OAAIA,CAAC,CAACU,SAAS,KAAKL,IAAI,CAACG,OAAO,CAACE,SAAS;UAAA,EAAE;UACzF,IAAIE,eAAe,EAAE;YACjBA,eAAe,CAACT,qBAAqB,IAAIE,IAAI,CAACM,UAAU;UAC5D;QACJ;MACJ,CAAC;MAdD,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,KAAK,CAACM,QAAQ,CAACwB,MAAM,EAAEP,CAAC,EAAE;QAAAF,KAAA;MAAA;MAe9C;MACA,OAAOP,gBAAgB;IAC3B,CAAC;IACDiB,iBAAiB,WAAAA,kBAAC/B,KAAK,EAACF,OAAO,EAAE;MAC7B;MACA,IAAIkC,gBAAgB,GAAGhC,KAAK,CAACiC,YAAY,CAACjB,GAAG,CAAC,UAAAC,CAAC;QAAA,OAAAC,aAAA,CAAAA,aAAA,KAAUD,CAAC;UAAEiB,sBAAsB,EAAE;QAAC;MAAA,CAAE,CAAC;MACxF;MAAA,IAAAC,MAAA,YAAAA,OAAA,EACiD;QAC7C,IAAIb,IAAI,GAAGtB,KAAK,CAACoC,SAAS,CAACb,CAAC,CAAC;QAC7B,IAAGD,IAAI,CAACe,KAAK,CAACb,QAAQ,CAAC1B,OAAO,CAACwC,YAAY,CAAC,EAAC;UACzC,IAAIC,QAAQ,GAAGP,gBAAgB,CAACN,IAAI,CAAC,UAAAc,CAAC;YAAA,OAAIA,CAAC,CAACC,GAAG,KAAKnB,IAAI,CAACiB,QAAQ,CAACE,GAAG;UAAA,EAAE;UACvE,IAAIF,QAAQ,EAAE;YACVP,gBAAgB,CAACV,IAAI,CAACiB,QAAQ,CAACE,GAAG,CAAC,CAACP,sBAAsB,IAAIZ,IAAI,CAACoB,WAAW;UAClF;QACJ;MACJ,CAAC;MARD,KAAK,IAAInB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,KAAK,CAACoC,SAAS,CAACN,MAAM,EAAEP,CAAC,EAAE;QAAAY,MAAA;MAAA;MAS/C;MACA,IAAIQ,cAAc,GAAGX,gBAAgB,CAAChB,GAAG,CAAC,UAACM,IAAI,EAAEsB,KAAK,EAAEC,GAAG,EAAK;QAC5D,OAAO;UACHC,IAAI,EAAExB,IAAI,CAACyB,KAAK;UAChBC,KAAK,EAAE1B,IAAI,CAACY;QAChB,CAAC;MACL,CAAC,CAAC;MACF,OAAOS,cAAc;IACzB,CAAC;IACD;IACAM,WAAW,WAAAA,YAACjD,KAAK,EAAE;MACf,IAAInB,MAAM,GAAGqE,OAAO,CAAC,QAAQ,CAAC;MAC9B,IAAID,WAAW,GAAGpE,MAAM,EAAE,CAACsE,MAAM,CAAC,YAAY,CAAC;MAC/C,OAAOF,WAAW;IACtB,CAAC;IACD;IACAX,YAAY,WAAAA,aAACtC,KAAK,EAAE;MAChB,IAAInB,MAAM,GAAGqE,OAAO,CAAC,QAAQ,CAAC;MAC9B,IAAIZ,YAAY,GAAGzD,MAAM,EAAE,CAACsE,MAAM,CAAC,SAAS,CAAC;MAC7C,OAAOb,YAAY;IACvB,CAAC;IACD;IACAc,mBAAmB,WAAAA,oBAACpD,KAAK,EAACF,OAAO,EAAE;MAE/B,OAAOE,KAAK,CAACM,QAAQ,CAAC+C,MAAM,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAAC5C,KAAK,IAAI4C,CAAC,CAAC5C,KAAK,KAAK,CAAC;MAAA,EAAC,CAAC2C,MAAM,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAAC5C,KAAK,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAKb,OAAO,CAACwC,YAAY;MAAA,EAAC;IACzH,CAAC;IACD;IACAiB,iBAAiB,WAAAA,kBAACvD,KAAK,EAACF,OAAO,EAAE;MAC7B,OAAOA,OAAO,CAACsD,mBAAmB,CAACC,MAAM,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAAC5C,KAAK,KAAKZ,OAAO,CAACmD,WAAW;MAAA,EAAC;IACnF,CAAC;IACD;IACAO,eAAe,WAAAA,gBAACxD,KAAK,EAACF,OAAO,EAAE;MAC3B,OAAOE,KAAK,CAACM,QAAQ,CAAC+C,MAAM,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACG,KAAK,IAAIH,CAAC,CAACG,KAAK,KAAK,CAAC;MAAA,EAAC,CAACJ,MAAM,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACG,KAAK,CAAC9C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAKb,OAAO,CAACwC,YAAY;MAAA,EAAC;IACzH,CAAC;IACD;IACAoB,aAAa,WAAAA,cAAC1D,KAAK,EAACF,OAAO,EAAE;MACzB,OAAOA,OAAO,CAAC0D,eAAe,CAACH,MAAM,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACG,KAAK,KAAK3D,OAAO,CAACmD,WAAW;MAAA,EAAC;IAC/E,CAAC;IACD;IACAU,iBAAiB,WAAAA,kBAAC3D,KAAK,EAACF,OAAO,EAAE;MAC7B,OAAOE,KAAK,CAAC4D,UAAU,CAACP,MAAM,CAAC,UAAAQ,CAAC;QAAA,OAAIA,CAAC,CAACC,UAAU,IAAID,CAAC,CAACC,UAAU,KAAK,CAAC;MAAA,EAAC,CAACT,MAAM,CAAC,UAAAQ,CAAC;QAAA,OAAIA,CAAC,CAACC,UAAU,CAACnD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAKb,OAAO,CAACwC,YAAY;MAAA,EAAC;IAC1I,CAAC;IACD;IACAyB,eAAe,WAAAA,gBAAC/D,KAAK,EAACF,OAAO,EAAE;MAC3B,OAAOA,OAAO,CAAC6D,iBAAiB,CAACN,MAAM,CAAC,UAAAQ,CAAC;QAAA,OAAIA,CAAC,CAACC,UAAU,KAAKhE,OAAO,CAACmD,WAAW;MAAA,EAAC;IACtF,CAAC;IACD;IACAe,yBAAyB,WAAAA,0BAAChE,KAAK,EAACF,OAAO,EAAE;MACrC,IAAIkE,yBAAyB,GAAG,CAAC;MACjC,KAAI,IAAIzC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGzB,OAAO,CAAC0D,eAAe,CAAC1B,MAAM,EAAEP,CAAC,EAAE,EAAC;QACnDyC,yBAAyB,IAAIlE,OAAO,CAAC0D,eAAe,CAACjC,CAAC,CAAC,CAACK,UAAU;MACtE;MACA,OAAOoC,yBAAyB;IACpC,CAAC;IACD;IACAC,uBAAuB,WAAAA,wBAACjE,KAAK,EAACF,OAAO,EAAE;MACnC,IAAImE,uBAAuB,GAAG,CAAC;MAC/B,KAAI,IAAI1C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGzB,OAAO,CAAC4D,aAAa,CAAC5B,MAAM,EAAEP,CAAC,EAAE,EAAC;QACjD0C,uBAAuB,IAAInE,OAAO,CAAC4D,aAAa,CAACnC,CAAC,CAAC,CAACK,UAAU;MAClE;MACA,OAAOqC,uBAAuB;IAClC;EACJ,CAAC;EACDC,SAAS,EAAC;IACNC,WAAW,WAAAA,YAACnE,KAAK,EAAEX,IAAI,EAAE;MAAE;MACvBW,KAAK,CAACM,QAAQ,GAAGjB,IAAI;IACzB,CAAC;IACD+E,cAAc,WAAAA,eAACpE,KAAK,EAAEqE,IAAI,EAAE;MAAE;MAC1BrE,KAAK,CAACe,WAAW,GAAGsD,IAAI;IAC5B,CAAC;IACDC,eAAe,WAAAA,gBAACtE,KAAK,EAAEqE,IAAI,EAAE;MAAE;MAC3BrE,KAAK,CAACiC,YAAY,GAAGoC,IAAI;IAC7B,CAAC;IACDE,YAAY,WAAAA,aAACvE,KAAK,EAAEX,IAAI,EAAE;MAAE;MACxBW,KAAK,CAACoC,SAAS,GAAG/C,IAAI;IAC1B,CAAC;IACDmF,aAAa,WAAAA,cAACxE,KAAK,EAAEX,IAAI,EAAE;MAAE;MACzBW,KAAK,CAAC4D,UAAU,GAAGvE,IAAI;IAC3B,CAAC;IACDoF,YAAY,WAAAA,aAACzE,KAAK,EAAEX,IAAI,EAAE;MAAE;MACxBW,KAAK,CAAC0E,SAAS,GAAGrF,IAAI;IAC1B;EACJ,CAAC;EACDW,KAAK,EAAC;IACFM,QAAQ,EAAE,EAAE;IACZS,WAAW,EAAE,EAAE;IACfkB,YAAY,EAAE,EAAE;IAChBG,SAAS,EAAE,EAAE;IACbwB,UAAU,EAAE,EAAE;IACdc,SAAS,EAAE,CACP;MACI5B,IAAI,EAAE,MAAM;MACZE,KAAK,EAAE,EAAE;MACT2B,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE;IACX,CAAC,EACD;MACI9B,IAAI,EAAE,MAAM;MACZE,KAAK,EAAE,EAAE;MACT2B,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;IACX,CAAC,EACD;MACI9B,IAAI,EAAE,MAAM;MACZE,KAAK,EAAE,EAAE;MACT2B,IAAI,EAAE,eAAe;MACrBC,KAAK,EAAE;IACX,CAAC,EACD;MACI9B,IAAI,EAAE,OAAO;MACbE,KAAK,EAAE,EAAE;MACT2B,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE;IACX,CAAC,EACD;MACI9B,IAAI,EAAE,MAAM;MACZE,KAAK,EAAE,EAAE;MACT2B,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE;IACX,CAAC,EACD;MACI9B,IAAI,EAAE,MAAM;MACZE,KAAK,EAAE,EAAE;MACT2B,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;IACX,CAAC,EACD;MACI9B,IAAI,EAAE,MAAM;MACZE,KAAK,EAAE,EAAE;MACT2B,IAAI,EAAE,eAAe;MACrBC,KAAK,EAAE;IACX,CAAC,EACD;MACI9B,IAAI,EAAE,OAAO;MACbE,KAAK,EAAE,EAAE;MACT2B,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE;IACX,CAAC;EAET;AACJ,CAAC"}]}