{"remainingRequest":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\babel-loader\\lib\\index.js!D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\src\\views\\Home.vue","mtime":1682413344009},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\babel.config.js","mtime":1681747183855},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681747155761},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1681747156896},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681747155761},{"path":"D:\\develop_tools\\work\\maven-work\\Yansol\\msystem-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1681747158581}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"D:/develop_tools/work/maven-work/Yansol/msystem-web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es6.regexp.to-string\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as echarts from 'echarts';\nimport _ from 'lodash';\nimport { getCompanyData, getEmployeeData, getGoodData, getOrderData, getReturnData } from \"../api\";\nexport default {\n  name: 'Home',\n  data: function data() {\n    return {\n      goodData: [],\n      companyData: [],\n      employeeData: [],\n      orderData: [],\n      returnData: [],\n      countData: [{\n        name: \"今日進貨\",\n        value: '',\n        icon: \"success\",\n        color: \"#2ec7c9\"\n      }, {\n        name: \"今日出貨\",\n        value: '',\n        icon: \"truck\",\n        color: \"#ffb980\"\n      }, {\n        name: \"今日退貨\",\n        value: '',\n        icon: \"message-solid\",\n        color: \"#c55aef\"\n      }, {\n        name: \"今日應收款\",\n        value: '',\n        icon: \"coin\",\n        color: \"#5ab1ef\"\n      }, {\n        name: \"本月進貨\",\n        value: '',\n        icon: \"success\",\n        color: \"#2ec7c9\"\n      }, {\n        name: \"本月出貨\",\n        value: '',\n        icon: \"truck\",\n        color: \"#ffb980\"\n      }, {\n        name: \"本月退貨\",\n        value: '',\n        icon: \"message-solid\",\n        color: \"#c55aef\"\n      }, {\n        name: \"本月應收款\",\n        value: '',\n        icon: \"coin\",\n        color: \"#5ab1ef\"\n      }]\n    };\n  },\n  created: function created() {\n    var _this = this;\n    getGoodData().then(function (response) {\n      _this.goodData = response.data;\n    }, function (error) {\n      alert(error.message);\n    });\n    getCompanyData().then(function (response) {\n      _this.companyData = response.data;\n    }, function (error) {\n      alert(error.message);\n    });\n    getEmployeeData().then(function (response) {\n      _this.employeeData = response.data;\n    }, function (error) {\n      alert(error.message);\n    });\n    getOrderData().then(function (response) {\n      _this.orderData = response.data;\n    }, function (error) {\n      alert(error.message);\n    });\n    getReturnData().then(function (response) {\n      _this.returnData = response.data;\n    }, function (error) {\n      alert(error.message);\n    });\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n    getGoodData().then(function (response) {\n      //將響應的數據綁定到this.goodData\n      // this.goodData = response.data;\n      //下面開始處理myChart1所需數據\n      var goodDataList = response.data;\n      //取得當前年份\n      var currentYear = new Date().getFullYear();\n      //取得去年年份\n      var lastYear = currentYear - 1;\n      // 首先使用lodash將數據按照月份進行分組\n      var byMonth = _.groupBy(goodDataList, function (good) {\n        return good.pDate.slice(0, 7);\n      });\n      // 然後對每個月份的訂單進行總收入計算，最後得到的monthlyRevenue對象的鍵表示月份（如'2022-01'），值表示當月的總收入（如300）\n      var monthlyRevenue = _.mapValues(byMonth, function (goodDataList) {\n        return _.sumBy(goodDataList, 'totalPrice') / 1000;\n      });\n      //動態設定myChart1表\n      myChart1.setOption({\n        legend: {\n          //echart中，legend的值必須要是String才會顯示顏色\n          data: [lastYear.toString(), currentYear.toString()]\n        },\n        series: [{\n          name: lastYear,\n          type: 'line',\n          data: [monthlyRevenue[\"\".concat(lastYear, \"-01\")], monthlyRevenue[\"\".concat(lastYear, \"-02\")], monthlyRevenue[\"\".concat(lastYear, \"-03\")], monthlyRevenue[\"\".concat(lastYear, \"-04\")], monthlyRevenue[\"\".concat(lastYear, \"-05\")], monthlyRevenue[\"\".concat(lastYear, \"-06\")], monthlyRevenue[\"\".concat(lastYear, \"-07\")], monthlyRevenue[\"\".concat(lastYear, \"-08\")], monthlyRevenue[\"\".concat(lastYear, \"-09\")], monthlyRevenue[\"\".concat(lastYear, \"-010\")], monthlyRevenue[\"\".concat(lastYear, \"-011\")], monthlyRevenue[\"\".concat(lastYear, \"-012\")]]\n        }, {\n          name: currentYear,\n          type: 'line',\n          data: [monthlyRevenue[\"\".concat(currentYear, \"-01\")], monthlyRevenue[\"\".concat(currentYear, \"-02\")], monthlyRevenue[\"\".concat(currentYear, \"-03\")], monthlyRevenue[\"\".concat(currentYear, \"-04\")], monthlyRevenue[\"\".concat(currentYear, \"-05\")], monthlyRevenue[\"\".concat(currentYear, \"-06\")], monthlyRevenue[\"\".concat(currentYear, \"-07\")], monthlyRevenue[\"\".concat(currentYear, \"-08\")], monthlyRevenue[\"\".concat(currentYear, \"-09\")], monthlyRevenue[\"\".concat(currentYear, \"-010\")], monthlyRevenue[\"\".concat(currentYear, \"-011\")], monthlyRevenue[\"\".concat(currentYear, \"-012\")]]\n        }]\n      });\n    }, function (error) {\n      alert(error.message);\n    });\n    getCompanyData().then(function (response) {\n      //處理myChart1所需的數據\n      //在返回的company數據中添加當年營收及去年營收欄位\n      var companyDataList = response.data.map(function (c) {\n        return _objectSpread(_objectSpread({}, c), {}, {\n          total_sales_this_year: 0,\n          total_sales_last_year: 0\n        });\n      });\n      //取得當前年份\n      var currentYear = new Date().getFullYear();\n      //取得去年年份\n      var lastYear = currentYear - 1;\n      //由this.goodDate中取得當前年份的營收\n      var _loop = function _loop() {\n        var item = _this2.goodData[i];\n        if (item.pDate.includes(currentYear)) {\n          var company = companyDataList.find(function (c) {\n            return c.companyId === item.company.companyId;\n          });\n          if (company) {\n            company.total_sales_this_year += item.totalPrice;\n          }\n          //由this.goodDate中取得去年年份的營收\n        } else if (item.pDate.includes(lastYear)) {\n          var companyLastYear = companyDataList.find(function (c) {\n            return c.companyId === item.company.companyId;\n          });\n          if (companyLastYear) {\n            companyLastYear.total_sales_last_year += item.totalPrice;\n          }\n        }\n      };\n      for (var i = 0; i < _this2.goodData.length; i++) {\n        _loop();\n      }\n      //將取的資料保存到this.companyData\n      _this2.companyData = companyDataList;\n      //動態設定myChart2資料\n      myChart2.setOption({\n        xAxis: {\n          data: _this2.companyData.map(function (company) {\n            return company.companyName;\n          })\n        },\n        legend: {\n          data: [lastYear.toString(), currentYear.toString()]\n        },\n        series: [{\n          name: lastYear,\n          data: _this2.companyData.map(function (company) {\n            return company.total_sales_last_year / 1000;\n          })\n        }, {\n          name: currentYear,\n          data: _this2.companyData.map(function (company) {\n            return company.total_sales_this_year / 1000;\n          })\n        }]\n      });\n    }, function (error) {\n      alert(error.message);\n    });\n    getOrderData().then(function (response) {\n      //以下處理myChart3所需數據\n      var orderDataList = response.data;\n      var employeeDataList = _this2.employeeData.map(function (c) {\n        return _objectSpread(_objectSpread({}, c), {}, {\n          total_sales_this_month: 0\n        });\n      });\n      //取得當前時間\n      var now = new Date();\n      //取得當前年份\n      var year = now.getFullYear();\n      //取得當前月份\n      var month = now.getMonth() + 1;\n      //月份補零操作\n      month = month < 10 ? \"0\" + month : month;\n      //由order篩選出當月每個員工的收入\n      var _loop2 = function _loop2() {\n        var item = orderDataList[i];\n        if (item.oDate.includes(\"\".concat(year, \"-\").concat(month))) {\n          var employee = employeeDataList.find(function (e) {\n            return e.eid === item.employee.eid;\n          });\n          if (employee) {\n            employeeDataList[item.employee.eid].total_sales_this_month += item.ototalPrice;\n          }\n        }\n      };\n      for (var i = 0; i < orderDataList.length; i++) {\n        _loop2();\n      }\n      //將當月每個員工的收入依myChart3所需格式保存到map中\n      var mappedDataList = employeeDataList.map(function (item, index, arr) {\n        return {\n          value: item.ename,\n          name: item.total_sales_this_month\n        };\n      });\n      myChart3.setOption({\n        //動態取得數據並設定到圖表\n        series: [{\n          data: employeeDataList.filter(function (emp) {\n            return emp.total_sales_this_month !== 0;\n          }).map(function (emp) {\n            return {\n              name: emp.ename,\n              value: [emp.total_sales_this_month]\n            };\n          })\n        }],\n        //動態綁定提式框\n        tooltip: {\n          trigger: 'item',\n          formatter: '{b}: {c} ({d}%)'\n        }\n      });\n\n      //以下處理countDate數據\n      //使用moment.js取得當前時間，格式為\"YYYY-MM-DD\"\n      var moment = require('moment');\n      var currentDate = moment().format('YYYY-MM-DD');\n      var currentMonth = moment().format('YYYY-MM');\n      //將this.goodData中符合當日時間的進貨商品保存到PurchaseLis中\n      var monthlyPurchaseList = _this2.goodData.filter(function (g) {\n        return g.pDate && g.pDate !== 0;\n      }).filter(function (g) {\n        return g.pDate.slice(0, 7) === currentMonth;\n      });\n      var dailyPurchaseList = monthlyPurchaseList.filter(function (g) {\n        return g.pDate === currentDate;\n      });\n      //將this.goodData中符合當日時間的出貨商品保存到ShipList中\n      var monthlyShipList = _this2.goodData.filter(function (g) {\n        return g.sDate && g.sDate !== 0;\n      }).filter(function (g) {\n        return g.sDate.slice(0, 7) === currentMonth;\n      });\n      var dailyShipList = monthlyShipList.filter(function (g) {\n        return g.sDate === currentDate;\n      });\n      //將this.returnData中符合當日時間的退貨商品保存到ReturnList中\n      var monthlyReturnList = _this2.returnData.filter(function (r) {\n        return r.returnDate && r.returnDate !== 0;\n      }).filter(function (r) {\n        return r.returnDate.slice(0, 7) === currentMonth;\n      });\n      var dailyReturnList = monthlyReturnList.filter(function (r) {\n        return r.returnDate === currentDate;\n      });\n      //定義當月應收款\n      var monthlyRevenue = 0;\n      //定義當日應收款\n      var dailyRevenue = 0;\n      //求得當月應收款\n      for (var _i = 0; _i < monthlyShipList.length; _i++) {\n        monthlyRevenue += monthlyShipList[_i].totalPrice;\n      }\n      //求得當日應收款\n      for (var _i2 = 0; _i2 < dailyShipList.length; _i2++) {\n        dailyRevenue += dailyShipList[_i2].totalPrice;\n      }\n      //動態綁定countDate數據\n      _this2.countData[0].value = dailyPurchaseList.length;\n      _this2.countData[1].value = dailyShipList.length;\n      _this2.countData[2].value = dailyReturnList.length;\n      _this2.countData[3].value = dailyRevenue;\n      _this2.countData[4].value = monthlyPurchaseList.length;\n      _this2.countData[5].value = monthlyShipList.length;\n      _this2.countData[6].value = monthlyReturnList.length;\n      _this2.countData[7].value = monthlyRevenue;\n    }, function (error) {\n      alert(error.message);\n    });\n\n    // 基於準備好的dom，初始化echarts實例\n    var myChart1 = echarts.init(this.$refs.echarts1);\n    // 繪製圖表1\n    myChart1.setOption({\n      title: {\n        text: '每月營收'\n      },\n      tooltip: {},\n      legend: {\n        data: []\n      },\n      xAxis: {\n        data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\n      },\n      yAxis: {\n        type: 'value',\n        name: '營收/(仟)'\n      },\n      series: [{\n        name: '',\n        type: 'line',\n        data: []\n      }, {\n        name: '',\n        type: 'line',\n        data: []\n      }]\n    });\n    // 基於準備好的dom，初始化echarts實例\n    var myChart2 = echarts.init(this.$refs.echarts2);\n    // 繪製圖表2\n    myChart2.setOption({\n      title: {\n        text: '廠商收入'\n      },\n      tooltip: {},\n      legend: {\n        data: ['', '']\n      },\n      xAxis: {\n        data: []\n      },\n      yAxis: {\n        type: 'value',\n        name: '營收/(仟)'\n      },\n      series: [{\n        name: '2019',\n        type: 'bar',\n        barGap: '20%',\n        barCategoryGap: '40%',\n        data: []\n      }, {\n        name: '2020',\n        type: 'bar',\n        data: []\n      }]\n    });\n    // 基於準備好的dom，初始化echarts實例\n    var myChart3 = echarts.init(this.$refs.echarts3);\n    // 繪製圖表3\n    myChart3.setOption({\n      title: {\n        text: '員工收入'\n      },\n      series: [{\n        type: 'pie',\n        data: [],\n        label: {\n          show: true,\n          formatter: '{b}: {c} 元  ({d}%)'\n        }\n      }]\n    });\n  }\n};",{"version":3,"names":["echarts","_","getCompanyData","getEmployeeData","getGoodData","getOrderData","getReturnData","name","data","goodData","companyData","employeeData","orderData","returnData","countData","value","icon","color","created","_this","then","response","error","alert","message","mounted","_this2","goodDataList","currentYear","Date","getFullYear","lastYear","byMonth","groupBy","good","pDate","slice","monthlyRevenue","mapValues","sumBy","myChart1","setOption","legend","toString","series","type","concat","companyDataList","map","c","_objectSpread","total_sales_this_year","total_sales_last_year","_loop","item","i","includes","company","find","companyId","totalPrice","companyLastYear","length","myChart2","xAxis","companyName","orderDataList","employeeDataList","total_sales_this_month","now","year","month","getMonth","_loop2","oDate","employee","e","eid","ototalPrice","mappedDataList","index","arr","ename","myChart3","filter","emp","tooltip","trigger","formatter","moment","require","currentDate","format","currentMonth","monthlyPurchaseList","g","dailyPurchaseList","monthlyShipList","sDate","dailyShipList","monthlyReturnList","r","returnDate","dailyReturnList","dailyRevenue","init","$refs","echarts1","title","text","yAxis","echarts2","barGap","barCategoryGap","echarts3","label","show"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\r\n  <el-row>\r\n    <el-col :span=\"8\" style=\"padding-right: 10px\">\r\n      <el-card class=\"box-card\">\r\n        <div class=\"user\">\r\n          <img src=\"../assets/images/male.png\" alt=\"\">\r\n          <div class=\"userinfo\">\r\n            <p class=\"name\">Admin</p>\r\n            <p class=\"access\">超级管理员</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"login-info\">\r\n          <p>上次登录时间：<span>2021-7-19</span></p>\r\n        </div>\r\n      </el-card>\r\n      <el-card style=\"margin-top: 20px;height: 620px;\">\r\n<!--        <div slot=\"header\" class=\"clearfix\">-->\r\n<!--          <span>待完成線材清單</span>-->\r\n<!--        </div>-->\r\n<!--        <p class=\"tablename\">《 待完成線材清單 》</p>-->\r\n        <el-table\r\n            :data=\"goodData\"\r\n            height=\"580\"\r\n            stripe\r\n            size=\"small\"\r\n            style=\"width: 100%\">\r\n          <el-table-column\r\n              prop=\"pdate\"\r\n              label=\"進貨日期\"\r\n              width=\"90\">\r\n          </el-table-column>\r\n          <el-table-column\r\n              prop=\"company.companyName\"\r\n              label=\"廠商\"\r\n              width=\"60\">\r\n          </el-table-column>\r\n          <el-table-column\r\n              prop=\"lineName\"\r\n              label=\"品名\">\r\n          </el-table-column>\r\n          <el-table-column\r\n              prop=\"lineType\"\r\n              label=\"端子\"\r\n              width=\"160\">\r\n          </el-table-column>\r\n          <el-table-column\r\n              prop=\"totalCount\"\r\n              label=\"數量\"\r\n              width=\"60\">\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-card>\r\n     </el-col>\r\n    <el-col :span=\"16\" style=\"padding-left: 10px\">\r\n      <div class=\"num\">\r\n        <el-card v-for=\"item in countData\" :key=\"item.name\" :body-style=\"{ display: 'flex', padding: 0 }\">\r\n          <i class=\"icon\" :class=\"`el-icon-${item.icon}`\" :style=\"{ background: item.color }\"></i>\r\n          <div class=\"detail\">\r\n            <p class=\"price\" v-if=\"item.icon === 'coin'\">{{ item.value }}  元</p>\r\n            <p class=\"price\" v-if=\"item.icon !== 'coin'\">{{ item.value }}  件</p>\r\n            <p class=\"desc\">{{ item.name }}</p>\r\n          </div>\r\n        </el-card>\r\n      </div>\r\n      <el-card style=\"height: 350px\">\r\n        <!-- 折线图 -->\r\n        <div ref=\"echarts1\" class=\"echarts3\" style=\"height: 350px\"></div>\r\n      </el-card>\r\n      <div class=\"graph\">\r\n        <el-card style=\"height: 340px\">\r\n          <div ref=\"echarts2\" class=\"echarts3\" style=\"height: 340px\"></div>\r\n        </el-card>\r\n        <el-card style=\"height: 340px\">\r\n          <div ref=\"echarts3\" class=\"echarts3\" style=\"height: 340px\"></div>\r\n        </el-card>\r\n      </div>\r\n    </el-col>\r\n  </el-row>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport _ from 'lodash';\r\nimport {getCompanyData, getEmployeeData, getGoodData, getOrderData, getReturnData} from \"../api\";\r\nexport default {\r\n  name:'Home',\r\n  data() {\r\n    return {\r\n      goodData: [],\r\n      companyData: [],\r\n      employeeData: [],\r\n      orderData: [],\r\n      returnData: [],\r\n      countData: [\r\n        {\r\n          name: \"今日進貨\",\r\n          value: '',\r\n          icon: \"success\",\r\n          color: \"#2ec7c9\",\r\n        },\r\n        {\r\n          name: \"今日出貨\",\r\n          value: '',\r\n          icon: \"truck\",\r\n          color: \"#ffb980\",\r\n        },\r\n        {\r\n          name: \"今日退貨\",\r\n          value: '',\r\n          icon: \"message-solid\",\r\n          color: \"#c55aef\",\r\n        },\r\n        {\r\n          name: \"今日應收款\",\r\n          value: '',\r\n          icon: \"coin\",\r\n          color: \"#5ab1ef\",\r\n        },\r\n        {\r\n          name: \"本月進貨\",\r\n          value: '',\r\n          icon: \"success\",\r\n          color: \"#2ec7c9\",\r\n        },\r\n        {\r\n          name: \"本月出貨\",\r\n          value: '',\r\n          icon: \"truck\",\r\n          color: \"#ffb980\",\r\n        },\r\n        {\r\n          name: \"本月退貨\",\r\n          value: '',\r\n          icon: \"message-solid\",\r\n          color: \"#c55aef\",\r\n        },\r\n        {\r\n          name: \"本月應收款\",\r\n          value: '',\r\n          icon: \"coin\",\r\n          color: \"#5ab1ef\",\r\n        },\r\n      ]\r\n    }\r\n  },\r\n  created() {\r\n    getGoodData().then(\r\n        response => {\r\n          this.goodData = response.data;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getCompanyData().then(\r\n        response => {\r\n          this.companyData = response.data;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getEmployeeData().then(\r\n        response => {\r\n          this.employeeData = response.data;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getOrderData().then(\r\n        response => {\r\n          this.orderData = response.data;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getReturnData().then(\r\n        response => {\r\n          this.returnData = response.data;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n\r\n\r\n  },\r\n  mounted() {\r\n    getGoodData().then(\r\n        response => {\r\n          //將響應的數據綁定到this.goodData\r\n          // this.goodData = response.data;\r\n          //下面開始處理myChart1所需數據\r\n          let goodDataList = response.data;\r\n          //取得當前年份\r\n          let currentYear = new Date().getFullYear();\r\n          //取得去年年份\r\n          let lastYear = currentYear-1;\r\n          // 首先使用lodash將數據按照月份進行分組\r\n          const byMonth = _.groupBy(goodDataList, good => good.pDate.slice(0, 7));\r\n          // 然後對每個月份的訂單進行總收入計算，最後得到的monthlyRevenue對象的鍵表示月份（如'2022-01'），值表示當月的總收入（如300）\r\n          const monthlyRevenue = _.mapValues(byMonth, goodDataList => _.sumBy(goodDataList, 'totalPrice')/1000);\r\n          //動態設定myChart1表\r\n          myChart1.setOption({\r\n            legend: {\r\n              //echart中，legend的值必須要是String才會顯示顏色\r\n              data: [lastYear.toString(),currentYear.toString()]\r\n            },\r\n            series: [\r\n              {\r\n                name: lastYear,\r\n                type: 'line',\r\n                data: [\r\n                  monthlyRevenue[`${lastYear}-01`],\r\n                  monthlyRevenue[`${lastYear}-02`],\r\n                  monthlyRevenue[`${lastYear}-03`],\r\n                  monthlyRevenue[`${lastYear}-04`],\r\n                  monthlyRevenue[`${lastYear}-05`],\r\n                  monthlyRevenue[`${lastYear}-06`],\r\n                  monthlyRevenue[`${lastYear}-07`],\r\n                  monthlyRevenue[`${lastYear}-08`],\r\n                  monthlyRevenue[`${lastYear}-09`],\r\n                  monthlyRevenue[`${lastYear}-010`],\r\n                  monthlyRevenue[`${lastYear}-011`],\r\n                  monthlyRevenue[`${lastYear}-012`]]\r\n              },\r\n              {\r\n                name: currentYear,\r\n                type: 'line',\r\n                data: [\r\n                  monthlyRevenue[`${currentYear}-01`],\r\n                  monthlyRevenue[`${currentYear}-02`],\r\n                  monthlyRevenue[`${currentYear}-03`],\r\n                  monthlyRevenue[`${currentYear}-04`],\r\n                  monthlyRevenue[`${currentYear}-05`],\r\n                  monthlyRevenue[`${currentYear}-06`],\r\n                  monthlyRevenue[`${currentYear}-07`],\r\n                  monthlyRevenue[`${currentYear}-08`],\r\n                  monthlyRevenue[`${currentYear}-09`],\r\n                  monthlyRevenue[`${currentYear}-010`],\r\n                  monthlyRevenue[`${currentYear}-011`],\r\n                  monthlyRevenue[`${currentYear}-012`]]\r\n              }\r\n            ]\r\n          });\r\n\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getCompanyData().then(\r\n        response => {\r\n          //處理myChart1所需的數據\r\n          //在返回的company數據中添加當年營收及去年營收欄位\r\n          let companyDataList = response.data.map(c => ({ ...c, total_sales_this_year: 0,total_sales_last_year: 0 }));\r\n          //取得當前年份\r\n          let currentYear = new Date().getFullYear();\r\n          //取得去年年份\r\n          let lastYear = currentYear-1;\r\n          //由this.goodDate中取得當前年份的營收\r\n          for (let i = 0; i < this.goodData.length; i++) {\r\n            let item = this.goodData[i];\r\n            if(item.pDate.includes(currentYear)){\r\n              let company = companyDataList.find(c => c.companyId === item.company.companyId );\r\n              if (company) {\r\n                company.total_sales_this_year += item.totalPrice;\r\n              }\r\n              //由this.goodDate中取得去年年份的營收\r\n            }else if(item.pDate.includes(lastYear)){\r\n              let companyLastYear = companyDataList.find(c => c.companyId === item.company.companyId );\r\n              if (companyLastYear) {\r\n                companyLastYear.total_sales_last_year += item.totalPrice;\r\n              }\r\n            }\r\n          }\r\n          //將取的資料保存到this.companyData\r\n          this.companyData = companyDataList;\r\n          //動態設定myChart2資料\r\n          myChart2.setOption({\r\n            xAxis: {\r\n              data: this.companyData.map(company => company.companyName)\r\n            },\r\n            legend: {\r\n              data: [lastYear.toString(),currentYear.toString()]\r\n            },\r\n            series: [\r\n              {\r\n                name: lastYear,\r\n                data: this.companyData.map(company => company.total_sales_last_year / 1000)\r\n              },\r\n              {\r\n                name: currentYear,\r\n                data: this.companyData.map(company => company.total_sales_this_year / 1000)\r\n              }\r\n            ]\r\n          });\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n    getOrderData().then(\r\n        response => {\r\n          //以下處理myChart3所需數據\r\n          let orderDataList = response.data;\r\n          let employeeDataList = this.employeeData.map(c => ({ ...c, total_sales_this_month: 0}));\r\n          //取得當前時間\r\n          let now = new Date();\r\n          //取得當前年份\r\n          let year = now.getFullYear();\r\n          //取得當前月份\r\n          let month = now.getMonth() + 1;\r\n          //月份補零操作\r\n          month = month < 10 ? \"0\" + month : month;\r\n          //由order篩選出當月每個員工的收入\r\n          for (let i = 0; i < orderDataList.length; i++) {\r\n            let item = orderDataList[i];\r\n            if(item.oDate.includes(`${year}-${month}`)){\r\n              let employee = employeeDataList.find(e => e.eid === item.employee.eid );\r\n              if (employee) {\r\n                employeeDataList[item.employee.eid].total_sales_this_month += item.ototalPrice;\r\n              }\r\n            }\r\n          }\r\n          //將當月每個員工的收入依myChart3所需格式保存到map中\r\n          let mappedDataList = employeeDataList.map((item, index, arr) => {\r\n            return {\r\n              value: item.ename,\r\n              name: item.total_sales_this_month\r\n            };\r\n          });\r\n          myChart3.setOption({\r\n            //動態取得數據並設定到圖表\r\n            series: [\r\n              {\r\n                data: employeeDataList.filter(emp => emp.total_sales_this_month !== 0).map(emp => {\r\n                  return {\r\n                    name: emp.ename,\r\n                    value: [emp.total_sales_this_month]\r\n                  };\r\n                })\r\n              }\r\n            ],\r\n           //動態綁定提式框\r\n            tooltip: {\r\n              trigger: 'item',\r\n              formatter: '{b}: {c} ({d}%)'\r\n            },\r\n          });\r\n\r\n          //以下處理countDate數據\r\n          //使用moment.js取得當前時間，格式為\"YYYY-MM-DD\"\r\n          let moment = require('moment');\r\n          let currentDate = moment().format('YYYY-MM-DD');\r\n          let currentMonth = moment().format('YYYY-MM');\r\n          //將this.goodData中符合當日時間的進貨商品保存到PurchaseLis中\r\n          let monthlyPurchaseList = this.goodData.filter(g => g.pDate && g.pDate !== 0).filter(g => g.pDate.slice(0, 7) === currentMonth);\r\n          let dailyPurchaseList  = monthlyPurchaseList.filter(g => g.pDate === currentDate);\r\n          //將this.goodData中符合當日時間的出貨商品保存到ShipList中\r\n          let monthlyShipList = this.goodData.filter(g => g.sDate && g.sDate !== 0).filter(g => g.sDate.slice(0, 7) === currentMonth);\r\n          let dailyShipList = monthlyShipList.filter(g => g.sDate === currentDate);\r\n          //將this.returnData中符合當日時間的退貨商品保存到ReturnList中\r\n          let monthlyReturnList = this.returnData.filter(r => r.returnDate && r.returnDate !== 0).filter(r => r.returnDate.slice(0, 7) === currentMonth);\r\n          let dailyReturnList = monthlyReturnList.filter(r => r.returnDate === currentDate);\r\n          //定義當月應收款\r\n          let monthlyRevenue = 0;\r\n          //定義當日應收款\r\n          let dailyRevenue = 0;\r\n          //求得當月應收款\r\n          for(let i = 0; i < monthlyShipList.length; i++){\r\n            monthlyRevenue += monthlyShipList[i].totalPrice;\r\n          }\r\n          //求得當日應收款\r\n          for(let i = 0; i < dailyShipList.length; i++){\r\n            dailyRevenue += dailyShipList[i].totalPrice;\r\n          }\r\n          //動態綁定countDate數據\r\n          this.countData[0].value = dailyPurchaseList.length;\r\n          this.countData[1].value = dailyShipList.length;\r\n          this.countData[2].value = dailyReturnList.length;\r\n          this.countData[3].value = dailyRevenue;\r\n          this.countData[4].value = monthlyPurchaseList.length;\r\n          this.countData[5].value = monthlyShipList.length;\r\n          this.countData[6].value = monthlyReturnList.length;\r\n          this.countData[7].value = monthlyRevenue;\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n    )\r\n\r\n    // 基於準備好的dom，初始化echarts實例\r\n    var myChart1 = echarts.init(this.$refs.echarts1);\r\n    // 繪製圖表1\r\n    myChart1.setOption({\r\n      title: {\r\n        text: '每月營收'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: []\r\n      },\r\n      xAxis: {\r\n        data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '營收/(仟)'\r\n      },\r\n      series: [\r\n        {\r\n          name: '',\r\n          type: 'line',\r\n          data: []\r\n        },\r\n        {\r\n          name: '',\r\n          type: 'line',\r\n          data: []\r\n        }\r\n      ]\r\n    });\r\n    // 基於準備好的dom，初始化echarts實例\r\n    var myChart2 = echarts.init(this.$refs.echarts2);\r\n    // 繪製圖表2\r\n    myChart2.setOption({\r\n      title: {\r\n        text: '廠商收入'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['','']\r\n      },\r\n      xAxis: {\r\n        data: []\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '營收/(仟)'\r\n      },\r\n      series: [\r\n        {\r\n          name: '2019',\r\n          type: 'bar',\r\n          barGap: '20%',\r\n          barCategoryGap: '40%',\r\n          data: []\r\n        },\r\n        {\r\n          name: '2020',\r\n          type: 'bar',\r\n          data: []\r\n        }\r\n      ]\r\n    });\r\n    // 基於準備好的dom，初始化echarts實例\r\n    var myChart3 = echarts.init(this.$refs.echarts3);\r\n    // 繪製圖表3\r\n    myChart3.setOption({\r\n      title: {\r\n        text: '員工收入'\r\n      },\r\n      series: [\r\n        {\r\n          type: 'pie',\r\n          data: [],\r\n          label: {\r\n            show: true,\r\n            formatter: '{b}: {c} 元  ({d}%)'\r\n          },\r\n        }\r\n      ]\r\n\r\n    });\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user {\r\n  padding-bottom: 20px;\r\n  margin-bottom: 20px;\r\n  border-bottom: 1px solid #ccc;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.user img {\r\n  margin-right: 40px;\r\n  width: 150px;\r\n  height: 150px;\r\n  border-radius: 50%;\r\n}\r\n.user .userinfo .name {\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n}\r\n.user .userinfo .access {\r\n  color: #999999;\r\n}\r\n.tablename {\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n  margin-top: 0px;\r\n  text-align: left;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  /*color: #999999;*/\r\n}\r\n.login-info p {\r\n  line-height: 28px;\r\n  font-size: 14px;\r\n  color: #999999;\r\n}\r\n.login-info p span {\r\n  color: #666666;\r\n  margin-left: 60px;\r\n}\r\n.num {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n}\r\n.num .icon {\r\n  width: 80px;\r\n  height: 80px;\r\n  font-size: 30px;\r\n  text-align: center;\r\n  line-height: 80px;\r\n  color: #fff;\r\n}\r\n.num .detail {\r\n  margin-left: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  height: 80px;\r\n}\r\n.num .detail .price {\r\n  font-size: 30px;\r\n  margin-bottom: 10px;\r\n  margin-top: 20px;\r\n  line-height: 30px;\r\n  height: 30px;\r\n}\r\n.num .detail .desc {\r\n  font-size: 14px;\r\n  color: #999;\r\n  text-align: center;\r\n  margin-top: 0;\r\n}\r\n.num .el-card {\r\n  width: 24%;\r\n  margin-bottom: 20px;\r\n}\r\n.graph {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.graph .el-card {\r\n  width: 48%;\r\n}\r\n.echarts2 , .echarts3 {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center\r\n}\r\n</style>"],"mappings":"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"}]}